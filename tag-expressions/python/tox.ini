# ============================================================================
# TOX CONFIGURATION:
# ============================================================================
# DESCRIPTION:
#
#   Use tox to run tasks (tests, ...) in a clean virtual environment.
#
# USAGE:
#
#   tox -e py27     # Runs tox with python 2.7
#   tox -e py36     # Runs tox with python 3.6
#   tox             # Runs tox with all installed python versions.
#   tox -r -e py27  # Recreates virtual environment and runs tox with python 2.7
#   tox -a -v       # Shows all test-environents w/ their descriptions.
#
# SEE ALSO:
# * https://tox.readthedocs.io/en/latest/config.html
# ============================================================================
# -- ONLINE USAGE:
# PIP_INDEX_URL = http://pypi.python.org/simple
# OOPS: pypy3 fails in virtualenv creation when python2 interpreter is used.

[tox]
minversion   = 2.8
envlist      = py27, py37, py36, py35, pypy
skip_missing_interpreters = True


# -----------------------------------------------------------------------------
# TEST ENVIRONMENTS:
# -----------------------------------------------------------------------------
# install_command = pip install -U {opts} {packages}
[testenv]
changedir = {toxinidir}
commands=
    pytest {posargs:tests}
deps=
    pytest>=3.2
    pytest-html>=1.19
passenv =
     PYTHONPATH = {toxinidir}


[testenv:devenv]
# basepython = python2.7
# envdir = devenv
description = Use package in development environment (develop-mode).
usedevelop = True


# -----------------------------------------------------------------------------
# TEST ENVIRONMENTS: For static code analysis, test coverage analysis, ...
# -----------------------------------------------------------------------------
[testenv:pylint]
description = Runs pylint (static code analysis) to detect any problems.
changedir  = {toxinidir}
usedevelop = True
commands=
    pylint {posargs:cucumber_tag_expressions/}
deps=
    pylint>=1.7
passenv =
     PYTHONPATH = {toxinidir}


[testenv:bandit]
description = Runs bandit (static code analysis) to detect security related problems.
usedevelop = True
changedir  = {toxinidir}
commands=
    bandit {posargs:cucumber_tag_expressions/}
deps=
    bandit>=1.4
passenv =
     PYTHONPATH = {toxinidir}


[testenv:coverage]
description = Generates test coverage report (html-report: build/coverage.html/).
usedevelop = True
changedir  = {toxinidir}
commands=
    coverage run -m pytest {posargs:tests}
    coverage combine
    coverage report
    coverage html
deps=
    {[testenv]deps}
    coverage>=4.2
passenv =
     PYTHONPATH = {toxinidir}


# -----------------------------------------------------------------------------
# TEST ENVIRONMENTS: Clean rooms
# -----------------------------------------------------------------------------
[testenv:cleanroom2]
basepython = python2
changedir = {envdir}
commands=
    {toxinidir}/scripts/toxcmd.py copytree ../../tests .
    {toxinidir}/scripts/toxcmd.py copy ../../pytest.ini .
    pytest {posargs:tests}
passenv =
     PYTHONPATH = .:{envdir}


[testenv:cleanroom3]
basepython = python3
changedir = {envdir}
commands=
    {toxinidir}/scripts/toxcmd.py copytree ../../tests .
    {toxinidir}/scripts/toxcmd.py copy ../../pytest.ini .
    {toxinidir}/scripts/toxcmd.py 2to3 -w -n --no-diffs tests
    pytest {posargs:tests}
passenv =
     PYTHONPATH = .:{envdir}

# ---------------------------------------------------------------------------
# SELDOM-USED TEST ENVIRONMENTS:
# ---------------------------------------------------------------------------
[testenv:jy27]
description = Runs tests with jython2.7.
basepython= jython
