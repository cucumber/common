<?php

declare(strict_types=1);

/**
 * This code was auto-generated by {this script}[https://github.com/cucumber/common/blob/main/messages/jsonschema/scripts/codegen.rb]
 */

namespace Cucumber\Messages;

use JsonSerializable;
use Cucumber\Messages\DecodingException\SchemaViolationException;

/**
 * Represents the PickleTableCell message in Cucumber's message protocol
 * @see https://github.com/cucumber/common/tree/main/messages#readme
 *
 */
final class PickleTableCell implements JsonSerializable
{
    use JsonEncodingTrait;

    public function __construct(
        public readonly string $value = '',
    ) {
    }

    /**
     * @throws SchemaViolationException
     *
     * @internal
     */
    public static function fromArray(array $arr): self
    {
        self::ensureValue($arr);

        return new self(
            (string) $arr['value'],
        );
    }

    /**
     * @psalm-assert array{value: string|int|bool} $arr
     */
    private static function ensureValue(array $arr): void
    {
        if (!array_key_exists('value', $arr)) {
            throw new SchemaViolationException('Property \'value\' is required but was not found');
        }
        if (array_key_exists('value', $arr) && is_array($arr['value'])) {
            throw new SchemaViolationException('Property \'value\' was array');
        }
    }
}
