<?php declare(strict_types=1);

/**
 * This code was auto-generated by {this script}[https://github.com/cucumber/common/blob/main/messages/jsonschema/scripts/codegen.rb]
 */

namespace Cucumber\Messages;

use \JsonSerializable;
<% @schemas.sort.each do |key, schema| %>
/**
 * Represents the <%= class_name(key) %> message in Cucumber's message protocol
 * @see https://github.com/cucumber/common/tree/main/messages#readme
 *
<%=- format_description(schema['description'], indent_string: '') -%> */
final class <%= class_name(key) %> implements JsonSerializable
{
	use JsonEncodingTrait;

    private function __construct(
    <%- schema['properties'].each do |property_name, property| -%>

		<%- property_type = type_for(key, property_name, property) -%>
		<%- if  property['description'] or property_type == 'array' -%>
        /**
        <%- if property['description'] -%>
	    <%= format_description(property['description']) %>
        <%- end -%>
        <%- if property_type == 'array' -%>
         * @param <%= is_nullable(property_name, schema) ? '?' : '' %>list<<%= array_contents_type(key, property_name, property) %>> $<%= property_name %>
        <%- end -%>
         */
        <%- end -%>
        public readonly <%= is_nullable(property_name, schema) ? '?' : '' %><%= property_type %> $<%= property_name %>,
    <%- end -%>

    ){}

    public static function fromArray(array $arr) : self
    {
    	return new self(
			<%- schema['properties'].each do |property_name, property| -%>
			<%= constructor_for(key, property, property_name, schema, 'arr') %>,
        	<%- end -%>
    	);
    }
}

<% end %>
