<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="0" name="pytest" skipped="0" tests="207" time="11.384"><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="34" name="test_empty_expression_is_true[-True-tags0-no_tags]" time="0.040"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="34" name="test_empty_expression_is_true[-True-tags1-one tag: a]" time="0.016"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="34" name="test_empty_expression_is_true[-True-tags2-one tag: other]" time="0.019"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="44" name="test_not_operation[not a-False-tags0-two tags: a, other]" time="0.021"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="44" name="test_not_operation[not a-False-tags1-one tag: a]" time="0.022"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="44" name="test_not_operation[not a-True-tags2-one tag: other]" time="0.013"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="44" name="test_not_operation[not a-True-tags3-no_tags]" time="0.021"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="55" name="test_complex_example" time="0.012"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="60" name="test_with_escaped_chars" time="0.012"><system-out>NOT-SUPPORTED-YET
</system-out></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="67" name="test_fails_when_only_operators_are_used[not]" time="0.008"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="67" name="test_fails_when_only_operators_are_used[and]" time="0.014"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="67" name="test_fails_when_only_operators_are_used[or]" time="0.015"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="76" name="test_and_operation[a and b-True-tags0-both tags]" time="0.024"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="76" name="test_and_operation[a and b-True-tags1-both tags and more]" time="0.026"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="76" name="test_and_operation[a and b-False-tags2-one tag: a]" time="0.024"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="76" name="test_and_operation[a and b-False-tags3-one tag: b]" time="0.020"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="76" name="test_and_operation[a and b-False-tags4-one tag: other]" time="0.015"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="76" name="test_and_operation[a and b-False-tags5-no_tags]" time="0.015"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="88" name="test_or_operation[a or b-True-tags0-both tags]" time="0.014"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="88" name="test_or_operation[a or b-True-tags1-both tags and more]" time="0.016"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="88" name="test_or_operation[a or b-True-tags2-one tag: a]" time="0.019"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="88" name="test_or_operation[a or b-True-tags3-one tag: b]" time="0.014"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="88" name="test_or_operation[a or b-False-tags4-one tag: other]" time="0.017"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="88" name="test_or_operation[a or b-False-tags5-no_tags]" time="0.019"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="100" name="test_literal[a-True-tags0-two tags: a, other]" time="0.022"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="100" name="test_literal[a-True-tags1-one tag: a]" time="0.017"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="100" name="test_literal[a-False-tags2-one tag: other]" time="0.034"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="100" name="test_literal[a-False-tags3-no_tags]" time="0.019"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b-True-tags0-two tags: a, b]" time="0.021"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b-False-tags1-one tag: a]" time="0.018"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b-False-tags2-no_tags]" time="0.023"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a or b-True-tags3-two tags: a, b]" time="0.015"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a or b-True-tags4-one tag: b]" time="0.017"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a or b-False-tags5-no_tags]" time="0.013"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b or c-True-tags6-three tags: a, b, c]" time="0.013"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b or c-True-tags7-three tags: a, other, c]" time="0.011"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b or c-True-tags8-three tags: a, b, other]" time="0.010"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b or c-True-tags9-two tags: a, b]" time="0.012"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b or c-True-tags10-two tags: a, c]" time="0.013"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b or c-False-tags11-one tag: a]" time="0.017"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b or c-True-tags12-one tag: c]" time="0.012"></testcase><testcase classname="tests.functional.test_tag_expression.TestTagExpression" file="tests/functional/test_tag_expression.py" line="111" name="test_not_not_expression_sameas_expression[a and b or c-False-tags13-not tags]" time="0.013"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="12" name="test_evaluate2[False-tags0-no_tags]" time="0.028"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="12" name="test_evaluate2[False-tags1-one tag: a]" time="0.089"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="12" name="test_evaluate2[False-tags2-one tag: b]" time="0.020"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="12" name="test_evaluate2[False-tags3-one tag: other]" time="0.025"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="12" name="test_evaluate2[True-tags4-both tags]" time="0.021"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="12" name="test_evaluate2[True-tags5-both tags (reversed)]" time="0.012"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="12" name="test_evaluate2[False-tags6-two tags: a, b2 (similar)]" time="0.020"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="12" name="test_evaluate2[False-tags7-two tags: a, other]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[False-tags0-no_tags]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[False-tags1-one tag: a]" time="0.016"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[False-tags2-one tag: b]" time="0.015"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[False-tags3-one tag: other]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[False-tags4-two tags: a, b]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[False-tags5-two tags: a, c]" time="0.016"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[False-tags6-two tags: a, other]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[True-tags7-all tags: a, b, c]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="26" name="test_evaluate3[False-tags8-three tags: other, b, c]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="41" name="test_convert_to_string[( a and b )-expression0]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="41" name="test_convert_to_string[( a and b and c )-expression1]" time="0.009"></testcase><testcase classname="tests.unit.test_model.TestAndOperation" file="tests/unit/test_model.py" line="41" name="test_convert_to_string[( a )-expression2]" time="0.008"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[False-tags0-no_tags]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[True-tags1-one tag: a]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[True-tags2-one tag: b]" time="0.072"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[False-tags3-one tag: other]" time="0.020"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[True-tags4-both tags]" time="0.026"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[True-tags5-both tags (reversed)]" time="0.018"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[True-tags6-two tags: a, b2]" time="0.018"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[True-tags7-two tags: a, other]" time="0.014"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="51" name="test_evaluate2[False-tags8-two tags: other1, other2]" time="0.009"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[False-tags0-no_tags]" time="0.012"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[True-tags1-one tag: a]" time="0.013"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[True-tags2-one tag: b]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[True-tags3-one tag: c]" time="0.009"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[False-tags4-one tag: other]" time="0.016"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[True-tags5-two tags: a, b]" time="0.017"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[True-tags6-two tags: a, c]" time="0.015"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[True-tags7-two tags: a, other]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[True-tags8-all tags]" time="0.015"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[True-tags9-three tags: other, b, c]" time="0.009"></testcase><testcase classname="tests.unit.test_model.TestOrOperation" file="tests/unit/test_model.py" line="66" name="test_evaluate3[False-tags10-two tahs: other1, other2]" time="0.012"></testcase><testcase classname="tests.unit.test_model.TestNotOperation" file="tests/unit/test_model.py" line="85" name="test_evaluate1[True-tags0-no_tags]" time="0.012"></testcase><testcase classname="tests.unit.test_model.TestNotOperation" file="tests/unit/test_model.py" line="85" name="test_evaluate1[False-tags1-one tag: a]" time="0.007"></testcase><testcase classname="tests.unit.test_model.TestNotOperation" file="tests/unit/test_model.py" line="85" name="test_evaluate1[True-tags2-one tag: other]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestNotOperation" file="tests/unit/test_model.py" line="85" name="test_evaluate1[False-tags3-two tags: a, other]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestNotOperation" file="tests/unit/test_model.py" line="85" name="test_evaluate1[False-tags4-two tags: other, a (reversed)]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestNotOperation" file="tests/unit/test_model.py" line="85" name="test_evaluate1[True-tags5-two tags: other1, other2]" time="0.024"></testcase><testcase classname="tests.unit.test_model.TestTrueOperation" file="tests/unit/test_model.py" line="99" name="test_evaluate1[True-tags0-no_tags]" time="0.018"></testcase><testcase classname="tests.unit.test_model.TestTrueOperation" file="tests/unit/test_model.py" line="99" name="test_evaluate1[True-tags1-one tag: a]" time="0.022"></testcase><testcase classname="tests.unit.test_model.TestTrueOperation" file="tests/unit/test_model.py" line="99" name="test_evaluate1[True-tags2-one tag: other]" time="0.014"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="110" name="test_evaluate_not__a_and_b[True-tags0-no_tags]" time="0.012"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="110" name="test_evaluate_not__a_and_b[True-tags1-one tag: a]" time="0.022"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="110" name="test_evaluate_not__a_and_b[True-tags2-one tag: b]" time="0.012"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="110" name="test_evaluate_not__a_and_b[True-tags3-one tag: other]" time="0.018"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="110" name="test_evaluate_not__a_and_b[False-tags4-two tags: a, b]" time="0.019"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="110" name="test_evaluate_not__a_and_b[False-tags5-   two tags: b, a (ordering)]" time="0.022"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="110" name="test_evaluate_not__a_and_b[True-tags6-two tags: a, b2 (similar)]" time="0.028"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="110" name="test_evaluate_not__a_and_b[True-tags7-two tags: a, other]" time="0.017"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="124" name="test_evaluate_not__a_or_b[True-tags0-no_tags]" time="0.016"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="124" name="test_evaluate_not__a_or_b[False-tags1-one tag: a]" time="0.009"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="124" name="test_evaluate_not__a_or_b[False-tags2-one tag: b]" time="0.012"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="124" name="test_evaluate_not__a_or_b[True-tags3-one tag: other]" time="0.017"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="124" name="test_evaluate_not__a_or_b[False-tags4-two tags: a, b]" time="0.017"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="124" name="test_evaluate_not__a_or_b[False-tags5-two tags: b, a (ordering)]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="124" name="test_evaluate_not__a_or_b[False-tags6-two tags: a, b2 (similar)]" time="0.014"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="124" name="test_evaluate_not__a_or_b[False-tags7-two tags: other]" time="0.009"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="138" name="test_evaluate_not_a_or_b[True-tags0-no_tags]" time="0.014"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="138" name="test_evaluate_not_a_or_b[False-tags1-one tag: a]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="138" name="test_evaluate_not_a_or_b[True-tags2-one tag: b]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="138" name="test_evaluate_not_a_or_b[True-tags3-one tag: other]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="138" name="test_evaluate_not_a_or_b[True-tags4-two tags: a, b]" time="0.011"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="138" name="test_evaluate_not_a_or_b[True-tags5-two tags: b, a (ordering)]" time="0.008"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="138" name="test_evaluate_not_a_or_b[False-tags6-two tags: a, other]" time="0.027"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="151" name="test_evaluate_not_a_or_not_b[True-tags0-no_tags]" time="0.012"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="151" name="test_evaluate_not_a_or_not_b[True-tags1-one tag: a]" time="0.015"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="151" name="test_evaluate_not_a_or_not_b[True-tags2-one tag: b]" time="0.067"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="151" name="test_evaluate_not_a_or_not_b[True-tags3-one tag: other]" time="0.010"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="151" name="test_evaluate_not_a_or_not_b[False-tags4-two tags: a, b]" time="0.025"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="151" name="test_evaluate_not_a_or_not_b[True-tags5-two tags: a, other]" time="0.027"></testcase><testcase classname="tests.unit.test_model.TestComposedExpression" file="tests/unit/test_model.py" line="151" name="test_evaluate_not_a_or_not_b[False-tags6-two tags: b, a (ordering)]" time="0.028"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="17" name="test_assoc[Token.OR-Associative.LEFT]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="17" name="test_assoc[Token.AND-Associative.LEFT]" time="0.044"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="17" name="test_assoc[Token.NOT-Associative.RIGHT]" time="0.011"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="17" name="test_assoc[Token.OPEN_PARENTHESIS-None]" time="0.037"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="17" name="test_assoc[Token.CLOSE_PARENTHESIS-None]" time="0.025"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="27" name="test_token_type[Token.OR-TokenType.OPERATOR]" time="0.018"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="27" name="test_token_type[Token.AND-TokenType.OPERATOR]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="27" name="test_token_type[Token.NOT-TokenType.OPERATOR]" time="0.107"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="27" name="test_token_type[Token.OPEN_PARENTHESIS-TokenType.OPERAND]" time="0.028"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="27" name="test_token_type[Token.CLOSE_PARENTHESIS-TokenType.OPERAND]" time="0.029"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="37" name="test_is_operation[Token.OR-True]" time="0.013"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="37" name="test_is_operation[Token.AND-True]" time="0.017"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="37" name="test_is_operation[Token.NOT-True]" time="0.008"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="37" name="test_is_operation[Token.OPEN_PARENTHESIS-False]" time="0.010"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="37" name="test_is_operation[Token.CLOSE_PARENTHESIS-False]" time="0.012"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="47" name="test_is_binary[Token.OR-True]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="47" name="test_is_binary[Token.AND-True]" time="0.018"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="47" name="test_is_binary[Token.NOT-False]" time="0.027"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="47" name="test_is_binary[Token.OPEN_PARENTHESIS-False]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="47" name="test_is_binary[Token.CLOSE_PARENTHESIS-False]" time="0.025"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="57" name="test_is_unary[Token.OR-False]" time="0.029"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="57" name="test_is_unary[Token.AND-False]" time="0.020"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="57" name="test_is_unary[Token.NOT-True]" time="0.022"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="57" name="test_is_unary[Token.OPEN_PARENTHESIS-False]" time="0.016"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="57" name="test_is_unary[Token.CLOSE_PARENTHESIS-False]" time="0.008"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.OR-Token.OR-True]" time="0.023"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.OR-Token.AND-True]" time="0.009"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.OR-Token.NOT-True]" time="0.022"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.AND-Token.AND-True]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.AND-Token.OR-False]" time="0.023"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.AND-Token.NOT-True]" time="0.022"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.NOT-Token.NOT-False]" time="0.038"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.NOT-Token.OR-False]" time="0.016"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="70" name="test_has_lower_precedence_than[Token.NOT-Token.AND-False]" time="0.019"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="84" name="test_has_lower_precedence_than__with_parens[Token.OR-Token.OPEN_PARENTHESIS-False]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="84" name="test_has_lower_precedence_than__with_parens[Token.OR-Token.CLOSE_PARENTHESIS-False]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="84" name="test_has_lower_precedence_than__with_parens[Token.AND-Token.OPEN_PARENTHESIS-False]" time="0.016"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="84" name="test_has_lower_precedence_than__with_parens[Token.AND-Token.CLOSE_PARENTHESIS-False]" time="0.011"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="84" name="test_has_lower_precedence_than__with_parens[Token.NOT-Token.OPEN_PARENTHESIS-False]" time="0.012"></testcase><testcase classname="tests.unit.test_parser.TestToken" file="tests/unit/test_parser.py" line="84" name="test_has_lower_precedence_than__with_parens[Token.NOT-Token.CLOSE_PARENTHESIS-False]" time="0.027"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="136" name="test_parse[a and b-( a and b )]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="136" name="test_parse[a or (b)-( a or b )]" time="0.021"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="136" name="test_parse[not   a-not ( a )]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="136" name="test_parse[( a and b ) or ( c and d )-( ( a and b ) or ( c and d ) )]" time="0.023"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="136" name="test_parse[not a or b and not c or not d or e and f-( ( ( not ( a ) or ( b and not ( c ) ) ) or not ( d ) ) or ( e and f ) )]" time="0.015"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="140" name="test_parse__with_one_literal[(a)-a]" time="0.033"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="140" name="test_parse__with_one_literal[b-b]" time="0.016"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="140" name="test_parse__with_one_literal[(((((c)))))-c]" time="0.013"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="148" name="test_parse__empty_is_always_true[]" time="0.008"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="148" name="test_parse__empty_is_always_true[  ]" time="0.004"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[a and b or c-( ( a and b ) or c )]" time="0.014"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[a or b and c-( a or ( b and c ) )]" time="0.011"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[a and b and c-( ( a and b ) and c )]" time="0.008"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[a or b or c-( ( a or b ) or c )]" time="0.008"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[a and not b-( a and not ( b ) )]" time="0.011"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[a or not b-( a or not ( b ) )]" time="0.008"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[not a and b-( not ( a ) and b )]" time="0.011"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[not a or b-( not ( a ) or b )]" time="0.011"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="152" name="test_parse__ensure_precedence[not (a and b) or c-( not ( ( a and b ) ) or c )]" time="0.013"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="167" name="test_parse__with_not_not[not not a-not ( not ( a ) )]" time="0.016"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="167" name="test_parse__with_not_not[not not a and b-( not ( not ( a ) ) and b )]" time="0.013"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="176" name="test_parse__fails_with_unbalanced_parens[( a and b ))-Missing &apos;(&apos;: Too few open-parens]" time="0.014"><system-out>TagExpressionError: Missing &apos;(&apos;: Too few open-parens in: ( a and b ))
Expression: ( a and b ) )
________________________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="176" name="test_parse__fails_with_unbalanced_parens[( ( a and b )-Unclosed &apos;(&apos;: Too many open-parens]" time="0.010"><system-out>TagExpressionError: Unclosed &apos;(&apos;: Too many open-parens in: ( ( a and b )
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="183" name="test_parse__fails_with_missing_operation_args[a not ( and )-Syntax error. Expected operator after a]" time="0.010"><system-out>TagExpressionError: Syntax error. Expected operator after a
Expression: a not ( and )
______________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="189" name="test_parse__fails_with_only_operations[or or-Syntax error. Expected operand after BEGIN]" time="0.006"><system-out>TagExpressionError: Syntax error. Expected operand after BEGIN
Expression: or or
_____________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="195" name="test_parse__fails_for_args_without_operation[a b-Syntax error. Expected operator after a]" time="0.009"><system-out>TagExpressionError: Syntax error. Expected operator after a
Expression: a b
______________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="201" name="test_parse__fails_for_empty_parens_groups[(())-Syntax error. Expected operand after (]" time="0.009"><system-out>TagExpressionError: Syntax error. Expected operand after (
Expression: ( ( ) )
________________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="201" name="test_parse__fails_for_empty_parens_groups[(() ())-Syntax error. Expected operand after (]" time="0.008"><system-out>TagExpressionError: Syntax error. Expected operand after (
Expression: ( ( ) ( ) )
________________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="208" name="test_parse__fails_with_rpn_notation[a b or-Syntax error. Expected operator after a]" time="0.010"><system-out>TagExpressionError: Syntax error. Expected operator after a
Expression: a b or
______________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="208" name="test_parse__fails_with_rpn_notation[a and (b not)-Syntax error. Expected operator after b]" time="0.006"><system-out>TagExpressionError: Syntax error. Expected operator after b
Expression: a and ( b not )
______________________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="208" name="test_parse__fails_with_rpn_notation[a and (b c) or-Syntax error. Expected operator after b]" time="0.006"><system-out>TagExpressionError: Syntax error. Expected operator after b
Expression: a and ( b c ) or
______________________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="234" name="test_parse__fails_and_operation_with_too_few_args[a and -and: Too few operands]" time="0.007"><system-out>TagExpressionError: and: Too few operands (expressions=[Literal(&apos;a&apos;)])
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="234" name="test_parse__fails_and_operation_with_too_few_args[  and b-Syntax error. Expected operand after BEGIN]" time="0.006"><system-out>TagExpressionError: Syntax error. Expected operand after BEGIN
Expression: and b
_____________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="241" name="test_parse__fails_or_operation_with_too_few_args[a or -or: Too few operands]" time="0.009"><system-out>TagExpressionError: or: Too few operands (expressions=[Literal(&apos;a&apos;)])
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="241" name="test_parse__fails_or_operation_with_too_few_args[  or b-Syntax error. Expected operand after BEGIN]" time="0.006"><system-out>TagExpressionError: Syntax error. Expected operand after BEGIN
Expression: or b
_____________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="241" name="test_parse__fails_or_operation_with_too_few_args[a and b or -or: Too few operands]" time="0.008"><system-out>TagExpressionError: or: Too few operands (expressions=[And(Literal(&apos;a&apos;), Literal(&apos;b&apos;))])
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="249" name="test_parse__fails_not_operation_with_too_few_args[not -not: Too few operands]" time="0.007"><system-out>TagExpressionError: not: Too few operands (expressions=[])
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="249" name="test_parse__fails_not_operation_with_too_few_args[not ()-Syntax error. Expected operand after (]" time="0.011"><system-out>TagExpressionError: Syntax error. Expected operand after (
Expression: not ( )
__________________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="249" name="test_parse__fails_not_operation_with_too_few_args[not () and b-Syntax error. Expected operand after (]" time="0.006"><system-out>TagExpressionError: Syntax error. Expected operand after (
Expression: not ( ) and b
__________________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="249" name="test_parse__fails_not_operation_with_too_few_args[not () or b-Syntax error. Expected operand after (]" time="0.010"><system-out>TagExpressionError: Syntax error. Expected operand after (
Expression: not ( ) or b
__________________^ (HERE)
</system-out></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="260" name="test_select_token[or-Token.OR]" time="0.008"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="260" name="test_select_token[and-Token.AND]" time="0.009"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="260" name="test_select_token[not-Token.NOT]" time="0.006"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="260" name="test_select_token[(-Token.OPEN_PARENTHESIS]" time="0.010"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="260" name="test_select_token[)-Token.CLOSE_PARENTHESIS]" time="0.006"></testcase><testcase classname="tests.unit.test_parser.TestTagExpressionParser" file="tests/unit/test_parser.py" line="260" name="test_select_token[UNKNOWN-None]" time="0.011"></testcase></testsuite></testsuites>