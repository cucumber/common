import * as N from "./nodes";
export declare type PrintableKind = N.File | N.Program | N.Identifier | N.BlockStatement | N.EmptyStatement | N.ExpressionStatement | N.IfStatement | N.LabeledStatement | N.BreakStatement | N.ContinueStatement | N.WithStatement | N.SwitchStatement | N.SwitchCase | N.ReturnStatement | N.ThrowStatement | N.TryStatement | N.CatchClause | N.WhileStatement | N.DoWhileStatement | N.ForStatement | N.VariableDeclaration | N.ForInStatement | N.DebuggerStatement | N.FunctionDeclaration | N.FunctionExpression | N.VariableDeclarator | N.ThisExpression | N.ArrayExpression | N.ObjectExpression | N.Property | N.Literal | N.SequenceExpression | N.UnaryExpression | N.BinaryExpression | N.AssignmentExpression | N.UpdateExpression | N.LogicalExpression | N.ConditionalExpression | N.NewExpression | N.CallExpression | N.MemberExpression | N.RestElement | N.TypeAnnotation | N.TSTypeAnnotation | N.SpreadElementPattern | N.ArrowFunctionExpression | N.ForOfStatement | N.YieldExpression | N.GeneratorExpression | N.ComprehensionBlock | N.ComprehensionExpression | N.ObjectProperty | N.PropertyPattern | N.ObjectPattern | N.ArrayPattern | N.MethodDefinition | N.SpreadElement | N.AssignmentPattern | N.ClassPropertyDefinition | N.ClassProperty | N.ClassBody | N.ClassDeclaration | N.ClassExpression | N.ImportSpecifier | N.ImportNamespaceSpecifier | N.ImportDefaultSpecifier | N.ImportDeclaration | N.TaggedTemplateExpression | N.TemplateLiteral | N.TemplateElement | N.SpreadProperty | N.SpreadPropertyPattern | N.AwaitExpression | N.JSXAttribute | N.JSXIdentifier | N.JSXNamespacedName | N.JSXExpressionContainer | N.JSXMemberExpression | N.JSXSpreadAttribute | N.JSXElement | N.JSXOpeningElement | N.JSXClosingElement | N.JSXFragment | N.JSXText | N.JSXOpeningFragment | N.JSXClosingFragment | N.JSXEmptyExpression | N.JSXSpreadChild | N.TypeParameterDeclaration | N.TSTypeParameterDeclaration | N.TypeParameterInstantiation | N.TSTypeParameterInstantiation | N.ClassImplements | N.TSExpressionWithTypeArguments | N.AnyTypeAnnotation | N.EmptyTypeAnnotation | N.MixedTypeAnnotation | N.VoidTypeAnnotation | N.NumberTypeAnnotation | N.NumberLiteralTypeAnnotation | N.NumericLiteralTypeAnnotation | N.StringTypeAnnotation | N.StringLiteralTypeAnnotation | N.BooleanTypeAnnotation | N.BooleanLiteralTypeAnnotation | N.NullableTypeAnnotation | N.NullLiteralTypeAnnotation | N.NullTypeAnnotation | N.ThisTypeAnnotation | N.ExistsTypeAnnotation | N.ExistentialTypeParam | N.FunctionTypeAnnotation | N.FunctionTypeParam | N.ArrayTypeAnnotation | N.ObjectTypeAnnotation | N.ObjectTypeProperty | N.ObjectTypeSpreadProperty | N.ObjectTypeIndexer | N.ObjectTypeCallProperty | N.ObjectTypeInternalSlot | N.Variance | N.QualifiedTypeIdentifier | N.GenericTypeAnnotation | N.MemberTypeAnnotation | N.UnionTypeAnnotation | N.IntersectionTypeAnnotation | N.TypeofTypeAnnotation | N.TypeParameter | N.InterfaceTypeAnnotation | N.InterfaceExtends | N.InterfaceDeclaration | N.DeclareInterface | N.TypeAlias | N.OpaqueType | N.DeclareTypeAlias | N.DeclareOpaqueType | N.TypeCastExpression | N.TupleTypeAnnotation | N.DeclareVariable | N.DeclareFunction | N.DeclareClass | N.DeclareModule | N.DeclareModuleExports | N.DeclareExportDeclaration | N.ExportSpecifier | N.ExportBatchSpecifier | N.DeclareExportAllDeclaration | N.InferredPredicate | N.DeclaredPredicate | N.ExportDeclaration | N.Block | N.Line | N.Noop | N.DoExpression | N.Super | N.BindExpression | N.Decorator | N.MetaProperty | N.ParenthesizedExpression | N.ExportDefaultDeclaration | N.ExportNamedDeclaration | N.ExportNamespaceSpecifier | N.ExportDefaultSpecifier | N.ExportAllDeclaration | N.CommentBlock | N.CommentLine | N.Directive | N.DirectiveLiteral | N.InterpreterDirective | N.StringLiteral | N.NumericLiteral | N.BigIntLiteral | N.NullLiteral | N.BooleanLiteral | N.RegExpLiteral | N.ObjectMethod | N.ClassPrivateProperty | N.ClassMethod | N.ClassPrivateMethod | N.PrivateName | N.RestProperty | N.ForAwaitStatement | N.Import | N.TSQualifiedName | N.TSTypeReference | N.TSAsExpression | N.TSNonNullExpression | N.TSAnyKeyword | N.TSBigIntKeyword | N.TSBooleanKeyword | N.TSNeverKeyword | N.TSNullKeyword | N.TSNumberKeyword | N.TSObjectKeyword | N.TSStringKeyword | N.TSSymbolKeyword | N.TSUndefinedKeyword | N.TSUnknownKeyword | N.TSVoidKeyword | N.TSThisType | N.TSArrayType | N.TSLiteralType | N.TSUnionType | N.TSIntersectionType | N.TSConditionalType | N.TSInferType | N.TSTypeParameter | N.TSParenthesizedType | N.TSFunctionType | N.TSConstructorType | N.TSDeclareFunction | N.TSDeclareMethod | N.TSMappedType | N.TSTupleType | N.TSRestType | N.TSOptionalType | N.TSIndexedAccessType | N.TSTypeOperator | N.TSIndexSignature | N.TSPropertySignature | N.TSMethodSignature | N.TSTypePredicate | N.TSCallSignatureDeclaration | N.TSConstructSignatureDeclaration | N.TSEnumMember | N.TSTypeQuery | N.TSImportType | N.TSTypeLiteral | N.TSTypeAssertion | N.TSEnumDeclaration | N.TSTypeAliasDeclaration | N.TSModuleBlock | N.TSModuleDeclaration | N.TSImportEqualsDeclaration | N.TSExternalModuleReference | N.TSExportAssignment | N.TSNamespaceExportDeclaration | N.TSInterfaceBody | N.TSInterfaceDeclaration | N.TSParameterProperty | N.OptionalMemberExpression | N.OptionalCallExpression;
export declare type SourceLocationKind = N.SourceLocation;
export declare type NodeKind = N.File | N.Program | N.Identifier | N.BlockStatement | N.EmptyStatement | N.ExpressionStatement | N.IfStatement | N.LabeledStatement | N.BreakStatement | N.ContinueStatement | N.WithStatement | N.SwitchStatement | N.SwitchCase | N.ReturnStatement | N.ThrowStatement | N.TryStatement | N.CatchClause | N.WhileStatement | N.DoWhileStatement | N.ForStatement | N.VariableDeclaration | N.ForInStatement | N.DebuggerStatement | N.FunctionDeclaration | N.FunctionExpression | N.VariableDeclarator | N.ThisExpression | N.ArrayExpression | N.ObjectExpression | N.Property | N.Literal | N.SequenceExpression | N.UnaryExpression | N.BinaryExpression | N.AssignmentExpression | N.UpdateExpression | N.LogicalExpression | N.ConditionalExpression | N.NewExpression | N.CallExpression | N.MemberExpression | N.RestElement | N.TypeAnnotation | N.TSTypeAnnotation | N.SpreadElementPattern | N.ArrowFunctionExpression | N.ForOfStatement | N.YieldExpression | N.GeneratorExpression | N.ComprehensionBlock | N.ComprehensionExpression | N.ObjectProperty | N.PropertyPattern | N.ObjectPattern | N.ArrayPattern | N.MethodDefinition | N.SpreadElement | N.AssignmentPattern | N.ClassPropertyDefinition | N.ClassProperty | N.ClassBody | N.ClassDeclaration | N.ClassExpression | N.ImportSpecifier | N.ImportNamespaceSpecifier | N.ImportDefaultSpecifier | N.ImportDeclaration | N.TaggedTemplateExpression | N.TemplateLiteral | N.TemplateElement | N.SpreadProperty | N.SpreadPropertyPattern | N.AwaitExpression | N.JSXAttribute | N.JSXIdentifier | N.JSXNamespacedName | N.JSXExpressionContainer | N.JSXMemberExpression | N.JSXSpreadAttribute | N.JSXElement | N.JSXOpeningElement | N.JSXClosingElement | N.JSXFragment | N.JSXText | N.JSXOpeningFragment | N.JSXClosingFragment | N.JSXEmptyExpression | N.JSXSpreadChild | N.TypeParameterDeclaration | N.TSTypeParameterDeclaration | N.TypeParameterInstantiation | N.TSTypeParameterInstantiation | N.ClassImplements | N.TSExpressionWithTypeArguments | N.AnyTypeAnnotation | N.EmptyTypeAnnotation | N.MixedTypeAnnotation | N.VoidTypeAnnotation | N.NumberTypeAnnotation | N.NumberLiteralTypeAnnotation | N.NumericLiteralTypeAnnotation | N.StringTypeAnnotation | N.StringLiteralTypeAnnotation | N.BooleanTypeAnnotation | N.BooleanLiteralTypeAnnotation | N.NullableTypeAnnotation | N.NullLiteralTypeAnnotation | N.NullTypeAnnotation | N.ThisTypeAnnotation | N.ExistsTypeAnnotation | N.ExistentialTypeParam | N.FunctionTypeAnnotation | N.FunctionTypeParam | N.ArrayTypeAnnotation | N.ObjectTypeAnnotation | N.ObjectTypeProperty | N.ObjectTypeSpreadProperty | N.ObjectTypeIndexer | N.ObjectTypeCallProperty | N.ObjectTypeInternalSlot | N.Variance | N.QualifiedTypeIdentifier | N.GenericTypeAnnotation | N.MemberTypeAnnotation | N.UnionTypeAnnotation | N.IntersectionTypeAnnotation | N.TypeofTypeAnnotation | N.TypeParameter | N.InterfaceTypeAnnotation | N.InterfaceExtends | N.InterfaceDeclaration | N.DeclareInterface | N.TypeAlias | N.OpaqueType | N.DeclareTypeAlias | N.DeclareOpaqueType | N.TypeCastExpression | N.TupleTypeAnnotation | N.DeclareVariable | N.DeclareFunction | N.DeclareClass | N.DeclareModule | N.DeclareModuleExports | N.DeclareExportDeclaration | N.ExportSpecifier | N.ExportBatchSpecifier | N.DeclareExportAllDeclaration | N.InferredPredicate | N.DeclaredPredicate | N.ExportDeclaration | N.Noop | N.DoExpression | N.Super | N.BindExpression | N.Decorator | N.MetaProperty | N.ParenthesizedExpression | N.ExportDefaultDeclaration | N.ExportNamedDeclaration | N.ExportNamespaceSpecifier | N.ExportDefaultSpecifier | N.ExportAllDeclaration | N.Directive | N.DirectiveLiteral | N.InterpreterDirective | N.StringLiteral | N.NumericLiteral | N.BigIntLiteral | N.NullLiteral | N.BooleanLiteral | N.RegExpLiteral | N.ObjectMethod | N.ClassPrivateProperty | N.ClassMethod | N.ClassPrivateMethod | N.PrivateName | N.RestProperty | N.ForAwaitStatement | N.Import | N.TSQualifiedName | N.TSTypeReference | N.TSAsExpression | N.TSNonNullExpression | N.TSAnyKeyword | N.TSBigIntKeyword | N.TSBooleanKeyword | N.TSNeverKeyword | N.TSNullKeyword | N.TSNumberKeyword | N.TSObjectKeyword | N.TSStringKeyword | N.TSSymbolKeyword | N.TSUndefinedKeyword | N.TSUnknownKeyword | N.TSVoidKeyword | N.TSThisType | N.TSArrayType | N.TSLiteralType | N.TSUnionType | N.TSIntersectionType | N.TSConditionalType | N.TSInferType | N.TSTypeParameter | N.TSParenthesizedType | N.TSFunctionType | N.TSConstructorType | N.TSDeclareFunction | N.TSDeclareMethod | N.TSMappedType | N.TSTupleType | N.TSRestType | N.TSOptionalType | N.TSIndexedAccessType | N.TSTypeOperator | N.TSIndexSignature | N.TSPropertySignature | N.TSMethodSignature | N.TSTypePredicate | N.TSCallSignatureDeclaration | N.TSConstructSignatureDeclaration | N.TSEnumMember | N.TSTypeQuery | N.TSImportType | N.TSTypeLiteral | N.TSTypeAssertion | N.TSEnumDeclaration | N.TSTypeAliasDeclaration | N.TSModuleBlock | N.TSModuleDeclaration | N.TSImportEqualsDeclaration | N.TSExternalModuleReference | N.TSExportAssignment | N.TSNamespaceExportDeclaration | N.TSInterfaceBody | N.TSInterfaceDeclaration | N.TSParameterProperty | N.OptionalMemberExpression | N.OptionalCallExpression;
export declare type CommentKind = N.Block | N.Line | N.CommentBlock | N.CommentLine;
export declare type PositionKind = N.Position;
export declare type FileKind = N.File;
export declare type ProgramKind = N.Program;
export declare type StatementKind = N.BlockStatement | N.EmptyStatement | N.ExpressionStatement | N.IfStatement | N.LabeledStatement | N.BreakStatement | N.ContinueStatement | N.WithStatement | N.SwitchStatement | N.ReturnStatement | N.ThrowStatement | N.TryStatement | N.WhileStatement | N.DoWhileStatement | N.ForStatement | N.VariableDeclaration | N.ForInStatement | N.DebuggerStatement | N.FunctionDeclaration | N.ForOfStatement | N.MethodDefinition | N.ClassPropertyDefinition | N.ClassProperty | N.ClassBody | N.ClassDeclaration | N.ImportDeclaration | N.TSTypeParameterDeclaration | N.InterfaceDeclaration | N.DeclareInterface | N.TypeAlias | N.OpaqueType | N.DeclareTypeAlias | N.DeclareOpaqueType | N.DeclareVariable | N.DeclareFunction | N.DeclareClass | N.DeclareModule | N.DeclareModuleExports | N.DeclareExportDeclaration | N.DeclareExportAllDeclaration | N.ExportDeclaration | N.Noop | N.ExportDefaultDeclaration | N.ExportNamedDeclaration | N.ExportAllDeclaration | N.ClassPrivateProperty | N.ClassMethod | N.ClassPrivateMethod | N.ForAwaitStatement | N.TSDeclareFunction | N.TSDeclareMethod | N.TSIndexSignature | N.TSPropertySignature | N.TSMethodSignature | N.TSCallSignatureDeclaration | N.TSConstructSignatureDeclaration | N.TSEnumDeclaration | N.TSTypeAliasDeclaration | N.TSModuleDeclaration | N.TSImportEqualsDeclaration | N.TSExternalModuleReference | N.TSExportAssignment | N.TSNamespaceExportDeclaration | N.TSInterfaceDeclaration;
export declare type FunctionKind = N.FunctionDeclaration | N.FunctionExpression | N.ArrowFunctionExpression | N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod;
export declare type PatternKind = N.Identifier | N.FunctionExpression | N.ThisExpression | N.ArrayExpression | N.ObjectExpression | N.Literal | N.SequenceExpression | N.UnaryExpression | N.BinaryExpression | N.AssignmentExpression | N.UpdateExpression | N.LogicalExpression | N.ConditionalExpression | N.NewExpression | N.CallExpression | N.MemberExpression | N.RestElement | N.SpreadElementPattern | N.ArrowFunctionExpression | N.YieldExpression | N.GeneratorExpression | N.ComprehensionExpression | N.PropertyPattern | N.ObjectPattern | N.ArrayPattern | N.AssignmentPattern | N.ClassExpression | N.TaggedTemplateExpression | N.TemplateLiteral | N.SpreadPropertyPattern | N.AwaitExpression | N.JSXIdentifier | N.JSXExpressionContainer | N.JSXMemberExpression | N.JSXElement | N.JSXFragment | N.JSXText | N.JSXEmptyExpression | N.JSXSpreadChild | N.TypeCastExpression | N.DoExpression | N.Super | N.BindExpression | N.MetaProperty | N.ParenthesizedExpression | N.DirectiveLiteral | N.StringLiteral | N.NumericLiteral | N.BigIntLiteral | N.NullLiteral | N.BooleanLiteral | N.RegExpLiteral | N.PrivateName | N.Import | N.TSAsExpression | N.TSNonNullExpression | N.TSTypeParameter | N.TSTypeAssertion | N.TSParameterProperty | N.OptionalMemberExpression | N.OptionalCallExpression;
export declare type ExpressionKind = N.Identifier | N.FunctionExpression | N.ThisExpression | N.ArrayExpression | N.ObjectExpression | N.Literal | N.SequenceExpression | N.UnaryExpression | N.BinaryExpression | N.AssignmentExpression | N.UpdateExpression | N.LogicalExpression | N.ConditionalExpression | N.NewExpression | N.CallExpression | N.MemberExpression | N.ArrowFunctionExpression | N.YieldExpression | N.GeneratorExpression | N.ComprehensionExpression | N.ClassExpression | N.TaggedTemplateExpression | N.TemplateLiteral | N.AwaitExpression | N.JSXIdentifier | N.JSXExpressionContainer | N.JSXMemberExpression | N.JSXElement | N.JSXFragment | N.JSXText | N.JSXEmptyExpression | N.JSXSpreadChild | N.TypeCastExpression | N.DoExpression | N.Super | N.BindExpression | N.MetaProperty | N.ParenthesizedExpression | N.DirectiveLiteral | N.StringLiteral | N.NumericLiteral | N.BigIntLiteral | N.NullLiteral | N.BooleanLiteral | N.RegExpLiteral | N.PrivateName | N.Import | N.TSAsExpression | N.TSNonNullExpression | N.TSTypeParameter | N.TSTypeAssertion | N.OptionalMemberExpression | N.OptionalCallExpression;
export declare type IdentifierKind = N.Identifier | N.JSXIdentifier | N.TSTypeParameter;
export declare type BlockStatementKind = N.BlockStatement;
export declare type EmptyStatementKind = N.EmptyStatement;
export declare type ExpressionStatementKind = N.ExpressionStatement;
export declare type IfStatementKind = N.IfStatement;
export declare type LabeledStatementKind = N.LabeledStatement;
export declare type BreakStatementKind = N.BreakStatement;
export declare type ContinueStatementKind = N.ContinueStatement;
export declare type WithStatementKind = N.WithStatement;
export declare type SwitchStatementKind = N.SwitchStatement;
export declare type SwitchCaseKind = N.SwitchCase;
export declare type ReturnStatementKind = N.ReturnStatement;
export declare type ThrowStatementKind = N.ThrowStatement;
export declare type TryStatementKind = N.TryStatement;
export declare type CatchClauseKind = N.CatchClause;
export declare type WhileStatementKind = N.WhileStatement;
export declare type DoWhileStatementKind = N.DoWhileStatement;
export declare type ForStatementKind = N.ForStatement;
export declare type DeclarationKind = N.VariableDeclaration | N.FunctionDeclaration | N.MethodDefinition | N.ClassPropertyDefinition | N.ClassProperty | N.ClassBody | N.ClassDeclaration | N.ImportDeclaration | N.TSTypeParameterDeclaration | N.InterfaceDeclaration | N.DeclareInterface | N.TypeAlias | N.OpaqueType | N.DeclareTypeAlias | N.DeclareOpaqueType | N.DeclareClass | N.DeclareExportDeclaration | N.DeclareExportAllDeclaration | N.ExportDeclaration | N.ExportDefaultDeclaration | N.ExportNamedDeclaration | N.ExportAllDeclaration | N.ClassPrivateProperty | N.ClassMethod | N.ClassPrivateMethod | N.TSDeclareFunction | N.TSDeclareMethod | N.TSIndexSignature | N.TSPropertySignature | N.TSMethodSignature | N.TSCallSignatureDeclaration | N.TSConstructSignatureDeclaration | N.TSEnumDeclaration | N.TSTypeAliasDeclaration | N.TSModuleDeclaration | N.TSImportEqualsDeclaration | N.TSExternalModuleReference | N.TSNamespaceExportDeclaration | N.TSInterfaceDeclaration;
export declare type VariableDeclarationKind = N.VariableDeclaration;
export declare type ForInStatementKind = N.ForInStatement;
export declare type DebuggerStatementKind = N.DebuggerStatement;
export declare type FunctionDeclarationKind = N.FunctionDeclaration;
export declare type FunctionExpressionKind = N.FunctionExpression;
export declare type VariableDeclaratorKind = N.VariableDeclarator;
export declare type ThisExpressionKind = N.ThisExpression;
export declare type ArrayExpressionKind = N.ArrayExpression;
export declare type ObjectExpressionKind = N.ObjectExpression;
export declare type PropertyKind = N.Property;
export declare type LiteralKind = N.Literal | N.JSXText | N.StringLiteral | N.NumericLiteral | N.BigIntLiteral | N.NullLiteral | N.BooleanLiteral | N.RegExpLiteral;
export declare type SequenceExpressionKind = N.SequenceExpression;
export declare type UnaryExpressionKind = N.UnaryExpression;
export declare type BinaryExpressionKind = N.BinaryExpression;
export declare type AssignmentExpressionKind = N.AssignmentExpression;
export declare type UpdateExpressionKind = N.UpdateExpression;
export declare type LogicalExpressionKind = N.LogicalExpression;
export declare type ConditionalExpressionKind = N.ConditionalExpression;
export declare type NewExpressionKind = N.NewExpression;
export declare type CallExpressionKind = N.CallExpression | N.OptionalCallExpression;
export declare type MemberExpressionKind = N.MemberExpression | N.JSXMemberExpression | N.OptionalMemberExpression;
export declare type RestElementKind = N.RestElement;
export declare type TypeAnnotationKind = N.TypeAnnotation;
export declare type TSTypeAnnotationKind = N.TSTypeAnnotation | N.TSTypePredicate;
export declare type SpreadElementPatternKind = N.SpreadElementPattern;
export declare type ArrowFunctionExpressionKind = N.ArrowFunctionExpression;
export declare type ForOfStatementKind = N.ForOfStatement;
export declare type YieldExpressionKind = N.YieldExpression;
export declare type GeneratorExpressionKind = N.GeneratorExpression;
export declare type ComprehensionBlockKind = N.ComprehensionBlock;
export declare type ComprehensionExpressionKind = N.ComprehensionExpression;
export declare type ObjectPropertyKind = N.ObjectProperty;
export declare type PropertyPatternKind = N.PropertyPattern;
export declare type ObjectPatternKind = N.ObjectPattern;
export declare type ArrayPatternKind = N.ArrayPattern;
export declare type MethodDefinitionKind = N.MethodDefinition;
export declare type SpreadElementKind = N.SpreadElement;
export declare type AssignmentPatternKind = N.AssignmentPattern;
export declare type ClassPropertyDefinitionKind = N.ClassPropertyDefinition;
export declare type ClassPropertyKind = N.ClassProperty | N.ClassPrivateProperty;
export declare type ClassBodyKind = N.ClassBody;
export declare type ClassDeclarationKind = N.ClassDeclaration;
export declare type ClassExpressionKind = N.ClassExpression;
export declare type SpecifierKind = N.ImportSpecifier | N.ImportNamespaceSpecifier | N.ImportDefaultSpecifier | N.ExportSpecifier | N.ExportBatchSpecifier | N.ExportNamespaceSpecifier | N.ExportDefaultSpecifier;
export declare type ModuleSpecifierKind = N.ImportSpecifier | N.ImportNamespaceSpecifier | N.ImportDefaultSpecifier | N.ExportSpecifier;
export declare type ImportSpecifierKind = N.ImportSpecifier;
export declare type ImportNamespaceSpecifierKind = N.ImportNamespaceSpecifier;
export declare type ImportDefaultSpecifierKind = N.ImportDefaultSpecifier;
export declare type ImportDeclarationKind = N.ImportDeclaration;
export declare type TaggedTemplateExpressionKind = N.TaggedTemplateExpression;
export declare type TemplateLiteralKind = N.TemplateLiteral;
export declare type TemplateElementKind = N.TemplateElement;
export declare type SpreadPropertyKind = N.SpreadProperty;
export declare type SpreadPropertyPatternKind = N.SpreadPropertyPattern;
export declare type AwaitExpressionKind = N.AwaitExpression;
export declare type JSXAttributeKind = N.JSXAttribute;
export declare type JSXIdentifierKind = N.JSXIdentifier;
export declare type JSXNamespacedNameKind = N.JSXNamespacedName;
export declare type JSXExpressionContainerKind = N.JSXExpressionContainer;
export declare type JSXMemberExpressionKind = N.JSXMemberExpression;
export declare type JSXSpreadAttributeKind = N.JSXSpreadAttribute;
export declare type JSXElementKind = N.JSXElement;
export declare type JSXOpeningElementKind = N.JSXOpeningElement;
export declare type JSXClosingElementKind = N.JSXClosingElement;
export declare type JSXFragmentKind = N.JSXFragment;
export declare type JSXTextKind = N.JSXText;
export declare type JSXOpeningFragmentKind = N.JSXOpeningFragment;
export declare type JSXClosingFragmentKind = N.JSXClosingFragment;
export declare type JSXEmptyExpressionKind = N.JSXEmptyExpression;
export declare type JSXSpreadChildKind = N.JSXSpreadChild;
export declare type TypeParameterDeclarationKind = N.TypeParameterDeclaration;
export declare type TSTypeParameterDeclarationKind = N.TSTypeParameterDeclaration;
export declare type TypeParameterInstantiationKind = N.TypeParameterInstantiation;
export declare type TSTypeParameterInstantiationKind = N.TSTypeParameterInstantiation;
export declare type ClassImplementsKind = N.ClassImplements;
export declare type TSTypeKind = N.TSExpressionWithTypeArguments | N.TSTypeReference | N.TSAnyKeyword | N.TSBigIntKeyword | N.TSBooleanKeyword | N.TSNeverKeyword | N.TSNullKeyword | N.TSNumberKeyword | N.TSObjectKeyword | N.TSStringKeyword | N.TSSymbolKeyword | N.TSUndefinedKeyword | N.TSUnknownKeyword | N.TSVoidKeyword | N.TSThisType | N.TSArrayType | N.TSLiteralType | N.TSUnionType | N.TSIntersectionType | N.TSConditionalType | N.TSInferType | N.TSParenthesizedType | N.TSFunctionType | N.TSConstructorType | N.TSMappedType | N.TSTupleType | N.TSRestType | N.TSOptionalType | N.TSIndexedAccessType | N.TSTypeOperator | N.TSTypeQuery | N.TSImportType | N.TSTypeLiteral;
export declare type TSHasOptionalTypeParameterInstantiationKind = N.TSExpressionWithTypeArguments | N.TSTypeReference | N.TSImportType;
export declare type TSExpressionWithTypeArgumentsKind = N.TSExpressionWithTypeArguments;
export declare type FlowKind = N.AnyTypeAnnotation | N.EmptyTypeAnnotation | N.MixedTypeAnnotation | N.VoidTypeAnnotation | N.NumberTypeAnnotation | N.NumberLiteralTypeAnnotation | N.NumericLiteralTypeAnnotation | N.StringTypeAnnotation | N.StringLiteralTypeAnnotation | N.BooleanTypeAnnotation | N.BooleanLiteralTypeAnnotation | N.NullableTypeAnnotation | N.NullLiteralTypeAnnotation | N.NullTypeAnnotation | N.ThisTypeAnnotation | N.ExistsTypeAnnotation | N.ExistentialTypeParam | N.FunctionTypeAnnotation | N.ArrayTypeAnnotation | N.ObjectTypeAnnotation | N.GenericTypeAnnotation | N.MemberTypeAnnotation | N.UnionTypeAnnotation | N.IntersectionTypeAnnotation | N.TypeofTypeAnnotation | N.TypeParameter | N.InterfaceTypeAnnotation | N.TupleTypeAnnotation | N.InferredPredicate | N.DeclaredPredicate;
export declare type FlowTypeKind = N.AnyTypeAnnotation | N.EmptyTypeAnnotation | N.MixedTypeAnnotation | N.VoidTypeAnnotation | N.NumberTypeAnnotation | N.NumberLiteralTypeAnnotation | N.NumericLiteralTypeAnnotation | N.StringTypeAnnotation | N.StringLiteralTypeAnnotation | N.BooleanTypeAnnotation | N.BooleanLiteralTypeAnnotation | N.NullableTypeAnnotation | N.NullLiteralTypeAnnotation | N.NullTypeAnnotation | N.ThisTypeAnnotation | N.ExistsTypeAnnotation | N.ExistentialTypeParam | N.FunctionTypeAnnotation | N.ArrayTypeAnnotation | N.ObjectTypeAnnotation | N.GenericTypeAnnotation | N.MemberTypeAnnotation | N.UnionTypeAnnotation | N.IntersectionTypeAnnotation | N.TypeofTypeAnnotation | N.TypeParameter | N.InterfaceTypeAnnotation | N.TupleTypeAnnotation;
export declare type AnyTypeAnnotationKind = N.AnyTypeAnnotation;
export declare type EmptyTypeAnnotationKind = N.EmptyTypeAnnotation;
export declare type MixedTypeAnnotationKind = N.MixedTypeAnnotation;
export declare type VoidTypeAnnotationKind = N.VoidTypeAnnotation;
export declare type NumberTypeAnnotationKind = N.NumberTypeAnnotation;
export declare type NumberLiteralTypeAnnotationKind = N.NumberLiteralTypeAnnotation;
export declare type NumericLiteralTypeAnnotationKind = N.NumericLiteralTypeAnnotation;
export declare type StringTypeAnnotationKind = N.StringTypeAnnotation;
export declare type StringLiteralTypeAnnotationKind = N.StringLiteralTypeAnnotation;
export declare type BooleanTypeAnnotationKind = N.BooleanTypeAnnotation;
export declare type BooleanLiteralTypeAnnotationKind = N.BooleanLiteralTypeAnnotation;
export declare type NullableTypeAnnotationKind = N.NullableTypeAnnotation;
export declare type NullLiteralTypeAnnotationKind = N.NullLiteralTypeAnnotation;
export declare type NullTypeAnnotationKind = N.NullTypeAnnotation;
export declare type ThisTypeAnnotationKind = N.ThisTypeAnnotation;
export declare type ExistsTypeAnnotationKind = N.ExistsTypeAnnotation;
export declare type ExistentialTypeParamKind = N.ExistentialTypeParam;
export declare type FunctionTypeAnnotationKind = N.FunctionTypeAnnotation;
export declare type FunctionTypeParamKind = N.FunctionTypeParam;
export declare type ArrayTypeAnnotationKind = N.ArrayTypeAnnotation;
export declare type ObjectTypeAnnotationKind = N.ObjectTypeAnnotation;
export declare type ObjectTypePropertyKind = N.ObjectTypeProperty;
export declare type ObjectTypeSpreadPropertyKind = N.ObjectTypeSpreadProperty;
export declare type ObjectTypeIndexerKind = N.ObjectTypeIndexer;
export declare type ObjectTypeCallPropertyKind = N.ObjectTypeCallProperty;
export declare type ObjectTypeInternalSlotKind = N.ObjectTypeInternalSlot;
export declare type VarianceKind = N.Variance;
export declare type QualifiedTypeIdentifierKind = N.QualifiedTypeIdentifier;
export declare type GenericTypeAnnotationKind = N.GenericTypeAnnotation;
export declare type MemberTypeAnnotationKind = N.MemberTypeAnnotation;
export declare type UnionTypeAnnotationKind = N.UnionTypeAnnotation;
export declare type IntersectionTypeAnnotationKind = N.IntersectionTypeAnnotation;
export declare type TypeofTypeAnnotationKind = N.TypeofTypeAnnotation;
export declare type TypeParameterKind = N.TypeParameter;
export declare type InterfaceTypeAnnotationKind = N.InterfaceTypeAnnotation;
export declare type InterfaceExtendsKind = N.InterfaceExtends;
export declare type InterfaceDeclarationKind = N.InterfaceDeclaration | N.DeclareInterface | N.DeclareClass;
export declare type DeclareInterfaceKind = N.DeclareInterface;
export declare type TypeAliasKind = N.TypeAlias | N.DeclareTypeAlias | N.DeclareOpaqueType;
export declare type OpaqueTypeKind = N.OpaqueType;
export declare type DeclareTypeAliasKind = N.DeclareTypeAlias;
export declare type DeclareOpaqueTypeKind = N.DeclareOpaqueType;
export declare type TypeCastExpressionKind = N.TypeCastExpression;
export declare type TupleTypeAnnotationKind = N.TupleTypeAnnotation;
export declare type DeclareVariableKind = N.DeclareVariable;
export declare type DeclareFunctionKind = N.DeclareFunction;
export declare type DeclareClassKind = N.DeclareClass;
export declare type DeclareModuleKind = N.DeclareModule;
export declare type DeclareModuleExportsKind = N.DeclareModuleExports;
export declare type DeclareExportDeclarationKind = N.DeclareExportDeclaration;
export declare type ExportSpecifierKind = N.ExportSpecifier;
export declare type ExportBatchSpecifierKind = N.ExportBatchSpecifier;
export declare type DeclareExportAllDeclarationKind = N.DeclareExportAllDeclaration;
export declare type FlowPredicateKind = N.InferredPredicate | N.DeclaredPredicate;
export declare type InferredPredicateKind = N.InferredPredicate;
export declare type DeclaredPredicateKind = N.DeclaredPredicate;
export declare type ExportDeclarationKind = N.ExportDeclaration;
export declare type BlockKind = N.Block;
export declare type LineKind = N.Line;
export declare type NoopKind = N.Noop;
export declare type DoExpressionKind = N.DoExpression;
export declare type SuperKind = N.Super;
export declare type BindExpressionKind = N.BindExpression;
export declare type DecoratorKind = N.Decorator;
export declare type MetaPropertyKind = N.MetaProperty;
export declare type ParenthesizedExpressionKind = N.ParenthesizedExpression;
export declare type ExportDefaultDeclarationKind = N.ExportDefaultDeclaration;
export declare type ExportNamedDeclarationKind = N.ExportNamedDeclaration;
export declare type ExportNamespaceSpecifierKind = N.ExportNamespaceSpecifier;
export declare type ExportDefaultSpecifierKind = N.ExportDefaultSpecifier;
export declare type ExportAllDeclarationKind = N.ExportAllDeclaration;
export declare type CommentBlockKind = N.CommentBlock;
export declare type CommentLineKind = N.CommentLine;
export declare type DirectiveKind = N.Directive;
export declare type DirectiveLiteralKind = N.DirectiveLiteral;
export declare type InterpreterDirectiveKind = N.InterpreterDirective;
export declare type StringLiteralKind = N.StringLiteral;
export declare type NumericLiteralKind = N.NumericLiteral;
export declare type BigIntLiteralKind = N.BigIntLiteral;
export declare type NullLiteralKind = N.NullLiteral;
export declare type BooleanLiteralKind = N.BooleanLiteral;
export declare type RegExpLiteralKind = N.RegExpLiteral;
export declare type ObjectMethodKind = N.ObjectMethod;
export declare type ClassPrivatePropertyKind = N.ClassPrivateProperty;
export declare type ClassMethodKind = N.ClassMethod;
export declare type ClassPrivateMethodKind = N.ClassPrivateMethod;
export declare type PrivateNameKind = N.PrivateName;
export declare type RestPropertyKind = N.RestProperty;
export declare type ForAwaitStatementKind = N.ForAwaitStatement;
export declare type ImportKind = N.Import;
export declare type TSQualifiedNameKind = N.TSQualifiedName;
export declare type TSTypeReferenceKind = N.TSTypeReference;
export declare type TSHasOptionalTypeParametersKind = N.TSFunctionType | N.TSConstructorType | N.TSDeclareFunction | N.TSDeclareMethod | N.TSMethodSignature | N.TSCallSignatureDeclaration | N.TSConstructSignatureDeclaration | N.TSTypeAliasDeclaration | N.TSInterfaceDeclaration;
export declare type TSHasOptionalTypeAnnotationKind = N.TSFunctionType | N.TSConstructorType | N.TSIndexSignature | N.TSPropertySignature | N.TSMethodSignature | N.TSCallSignatureDeclaration | N.TSConstructSignatureDeclaration;
export declare type TSAsExpressionKind = N.TSAsExpression;
export declare type TSNonNullExpressionKind = N.TSNonNullExpression;
export declare type TSAnyKeywordKind = N.TSAnyKeyword;
export declare type TSBigIntKeywordKind = N.TSBigIntKeyword;
export declare type TSBooleanKeywordKind = N.TSBooleanKeyword;
export declare type TSNeverKeywordKind = N.TSNeverKeyword;
export declare type TSNullKeywordKind = N.TSNullKeyword;
export declare type TSNumberKeywordKind = N.TSNumberKeyword;
export declare type TSObjectKeywordKind = N.TSObjectKeyword;
export declare type TSStringKeywordKind = N.TSStringKeyword;
export declare type TSSymbolKeywordKind = N.TSSymbolKeyword;
export declare type TSUndefinedKeywordKind = N.TSUndefinedKeyword;
export declare type TSUnknownKeywordKind = N.TSUnknownKeyword;
export declare type TSVoidKeywordKind = N.TSVoidKeyword;
export declare type TSThisTypeKind = N.TSThisType;
export declare type TSArrayTypeKind = N.TSArrayType;
export declare type TSLiteralTypeKind = N.TSLiteralType;
export declare type TSUnionTypeKind = N.TSUnionType;
export declare type TSIntersectionTypeKind = N.TSIntersectionType;
export declare type TSConditionalTypeKind = N.TSConditionalType;
export declare type TSInferTypeKind = N.TSInferType;
export declare type TSTypeParameterKind = N.TSTypeParameter;
export declare type TSParenthesizedTypeKind = N.TSParenthesizedType;
export declare type TSFunctionTypeKind = N.TSFunctionType;
export declare type TSConstructorTypeKind = N.TSConstructorType;
export declare type TSDeclareFunctionKind = N.TSDeclareFunction;
export declare type TSDeclareMethodKind = N.TSDeclareMethod;
export declare type TSMappedTypeKind = N.TSMappedType;
export declare type TSTupleTypeKind = N.TSTupleType;
export declare type TSRestTypeKind = N.TSRestType;
export declare type TSOptionalTypeKind = N.TSOptionalType;
export declare type TSIndexedAccessTypeKind = N.TSIndexedAccessType;
export declare type TSTypeOperatorKind = N.TSTypeOperator;
export declare type TSIndexSignatureKind = N.TSIndexSignature;
export declare type TSPropertySignatureKind = N.TSPropertySignature;
export declare type TSMethodSignatureKind = N.TSMethodSignature;
export declare type TSTypePredicateKind = N.TSTypePredicate;
export declare type TSCallSignatureDeclarationKind = N.TSCallSignatureDeclaration;
export declare type TSConstructSignatureDeclarationKind = N.TSConstructSignatureDeclaration;
export declare type TSEnumMemberKind = N.TSEnumMember;
export declare type TSTypeQueryKind = N.TSTypeQuery;
export declare type TSImportTypeKind = N.TSImportType;
export declare type TSTypeLiteralKind = N.TSTypeLiteral;
export declare type TSTypeAssertionKind = N.TSTypeAssertion;
export declare type TSEnumDeclarationKind = N.TSEnumDeclaration;
export declare type TSTypeAliasDeclarationKind = N.TSTypeAliasDeclaration;
export declare type TSModuleBlockKind = N.TSModuleBlock;
export declare type TSModuleDeclarationKind = N.TSModuleDeclaration;
export declare type TSImportEqualsDeclarationKind = N.TSImportEqualsDeclaration;
export declare type TSExternalModuleReferenceKind = N.TSExternalModuleReference;
export declare type TSExportAssignmentKind = N.TSExportAssignment;
export declare type TSNamespaceExportDeclarationKind = N.TSNamespaceExportDeclaration;
export declare type TSInterfaceBodyKind = N.TSInterfaceBody;
export declare type TSInterfaceDeclarationKind = N.TSInterfaceDeclaration;
export declare type TSParameterPropertyKind = N.TSParameterProperty;
export declare type OptionalMemberExpressionKind = N.OptionalMemberExpression;
export declare type OptionalCallExpressionKind = N.OptionalCallExpression;
