{"version":3,"file":"react-sizeme.js","sources":["../src/resize-detector.js","../src/with-size.js","../src/component.js","../src/index.js"],"sourcesContent":["import createResizeDetector from 'element-resize-detector'\n\nconst instances = {}\n\n// Lazily require to not cause bug\n// https://github.com/ctrlplusb/react-sizeme/issues/6\nfunction resizeDetector(strategy = 'scroll') {\n  if (!instances[strategy]) {\n    instances[strategy] = createResizeDetector({\n      strategy,\n    })\n  }\n\n  return instances[strategy]\n}\n\nexport default resizeDetector\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-find-dom-node */\n\nimport React, { Children, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport invariant from 'invariant'\nimport { debounce, throttle } from 'throttle-debounce'\nimport resizeDetector from './resize-detector'\n\nconst errMsg =\n  'react-sizeme: an error occurred whilst stopping to listen to node size changes'\n\nconst defaultConfig = {\n  monitorWidth: true,\n  monitorHeight: false,\n  monitorPosition: false,\n  refreshRate: 16,\n  refreshMode: 'throttle',\n  noPlaceholder: false,\n  resizeDetectorStrategy: 'scroll',\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\n/**\n * This is a utility wrapper component that will allow our higher order\n * component to get a ref handle on our wrapped components html.\n * @see https://gist.github.com/jimfb/32b587ee6177665fb4cf\n */\nclass ReferenceWrapper extends Component {\n  static displayName = 'SizeMeReferenceWrapper'\n\n  render() {\n    return Children.only(this.props.children)\n  }\n}\nReferenceWrapper.propTypes = { children: PropTypes.element.isRequired }\n\nfunction Placeholder({ className, style }) {\n  // Lets create the props for the temp element.\n  const phProps = {}\n\n  // We will use any provided className/style or else make the temp\n  // container take the full available space.\n  if (!className && !style) {\n    phProps.style = { width: '100%', height: '100%' }\n  } else {\n    if (className) {\n      phProps.className = className\n    }\n    if (style) {\n      phProps.style = style\n    }\n  }\n\n  return <div {...phProps} />\n}\nPlaceholder.displayName = 'SizeMePlaceholder'\nPlaceholder.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n}\n\n/**\n * As we need to maintain a ref on the root node that is rendered within our\n * SizeMe component we need to wrap our entire render in a sub component.\n * Without this, we lose the DOM ref after the placeholder is removed from\n * the render and the actual component is rendered.\n * It took me forever to figure this out, so tread extra careful on this one!\n */\nconst renderWrapper = WrappedComponent => {\n  function SizeMeRenderer(props) {\n    const {\n      explicitRef,\n      className,\n      style,\n      size,\n      disablePlaceholder,\n      onSize,\n      ...restProps\n    } = props\n\n    const noSizeData =\n      size == null ||\n      (size.width == null && size.height == null && size.position == null)\n\n    const renderPlaceholder = noSizeData && !disablePlaceholder\n\n    const renderProps = {\n      className,\n      style,\n    }\n\n    if (size != null) {\n      renderProps.size = size\n    }\n\n    const toRender = renderPlaceholder ? (\n      <Placeholder className={className} style={style} />\n    ) : (\n      <WrappedComponent {...renderProps} {...restProps} />\n    )\n\n    return <ReferenceWrapper ref={explicitRef}>{toRender}</ReferenceWrapper>\n  }\n\n  SizeMeRenderer.displayName = `SizeMeRenderer(${getDisplayName(\n    WrappedComponent,\n  )})`\n\n  SizeMeRenderer.propTypes = {\n    explicitRef: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    style: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    size: PropTypes.shape({\n      width: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n      height: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n      position: PropTypes.object,\n    }),\n    disablePlaceholder: PropTypes.bool,\n    onSize: PropTypes.func,\n  }\n\n  return SizeMeRenderer\n}\n\n/**\n * :: config -> Component -> WrappedComponent\n *\n * Higher order component that allows the wrapped component to become aware\n * of it's size, by receiving it as an object within it's props.\n *\n * @param  monitorWidth\n *   Default true, whether changes in the element's width should be monitored,\n *   causing a size property to be broadcast.\n * @param  monitorHeight\n *   Default false, whether changes in the element's height should be monitored,\n *   causing a size property to be broadcast.\n *\n * @return The wrapped component.\n */\nfunction withSize(config = defaultConfig) {\n  const {\n    monitorWidth = defaultConfig.monitorWidth,\n    monitorHeight = defaultConfig.monitorHeight,\n    monitorPosition = defaultConfig.monitorPosition,\n    refreshRate = defaultConfig.refreshRate,\n    refreshMode = defaultConfig.refreshMode,\n    noPlaceholder = defaultConfig.noPlaceholder,\n    resizeDetectorStrategy = defaultConfig.resizeDetectorStrategy,\n  } = config\n\n  invariant(\n    monitorWidth || monitorHeight || monitorPosition,\n    'You have to monitor at least one of the width, height, or position when using \"sizeMe\"',\n  )\n\n  invariant(\n    refreshRate >= 16,\n    \"It is highly recommended that you don't put your refreshRate lower than \" +\n      '16 as this may cause layout thrashing.',\n  )\n\n  invariant(\n    refreshMode === 'throttle' || refreshMode === 'debounce',\n    'The refreshMode should have a value of \"throttle\" or \"debounce\"',\n  )\n\n  const refreshDelayStrategy = refreshMode === 'throttle' ? throttle : debounce\n\n  return function WrapComponent(WrappedComponent) {\n    const SizeMeRenderWrapper = renderWrapper(WrappedComponent)\n\n    class SizeAwareComponent extends React.Component {\n      static displayName = `SizeMe(${getDisplayName(WrappedComponent)})`\n\n      static propTypes = {\n        onSize: PropTypes.func,\n      }\n\n      domEl = null\n\n      state = {\n        width: undefined,\n        height: undefined,\n        position: undefined,\n      }\n\n      componentDidMount() {\n        this.detector = resizeDetector(resizeDetectorStrategy)\n        this.determineStrategy(this.props)\n        this.handleDOMNode()\n      }\n\n      componentDidUpdate() {\n        this.determineStrategy(this.props)\n        this.handleDOMNode()\n      }\n\n      componentWillUnmount() {\n        // Change our size checker to a noop just in case we have some\n        // late running events.\n        this.hasSizeChanged = () => undefined\n        this.checkIfSizeChanged = () => undefined\n        this.uninstall()\n      }\n\n      uninstall = () => {\n        if (this.domEl) {\n          try {\n            this.detector.uninstall(this.domEl)\n          } catch (err) {\n            // eslint-disable-next-line no-console\n            console.warn(errMsg)\n          }\n          this.domEl = null\n        }\n      }\n\n      determineStrategy = props => {\n        if (props.onSize) {\n          if (!this.callbackState) {\n            this.callbackState = {\n              ...this.state,\n            }\n          }\n          this.strategy = 'callback'\n        } else {\n          this.strategy = 'render'\n        }\n      }\n\n      strategisedSetState = state => {\n        if (this.strategy === 'callback') {\n          this.callbackState = state\n          this.props.onSize(state)\n        }\n        this.setState(state)\n      }\n\n      strategisedGetState = () =>\n        this.strategy === 'callback' ? this.callbackState : this.state\n\n      handleDOMNode() {\n        const found = this.element && ReactDOM.findDOMNode(this.element)\n\n        if (!found) {\n          // If we previously had a dom node then we need to ensure that\n          // we remove any existing listeners to avoid memory leaks.\n          this.uninstall()\n          return\n        }\n\n        if (!this.domEl) {\n          this.domEl = found\n          this.detector.listenTo(this.domEl, this.checkIfSizeChanged)\n        } else if (\n          (this.domEl.isSameNode && !this.domEl.isSameNode(found)) ||\n          this.domEl !== found\n        ) {\n          this.uninstall()\n          this.domEl = found\n          this.detector.listenTo(this.domEl, this.checkIfSizeChanged)\n        } else {\n          // Do nothing 👍\n        }\n      }\n\n      refCallback = element => {\n        this.element = element\n      }\n\n      hasSizeChanged = (current, next) => {\n        const c = current\n        const n = next\n        const cp = c.position || {}\n        const np = n.position || {}\n\n        return (\n          (monitorWidth && c.width !== n.width) ||\n          (monitorHeight && c.height !== n.height) ||\n          (monitorPosition &&\n            (cp.top !== np.top ||\n              cp.left !== np.left ||\n              cp.bottom !== np.bottom ||\n              cp.right !== np.right))\n        )\n      }\n\n      checkIfSizeChanged = refreshDelayStrategy(refreshRate, el => {\n        const {\n          width,\n          height,\n          right,\n          left,\n          top,\n          bottom,\n        } = el.getBoundingClientRect()\n\n        const next = {\n          width: monitorWidth ? width : null,\n          height: monitorHeight ? height : null,\n          position: monitorPosition ? { right, left, top, bottom } : null,\n        }\n\n        if (this.hasSizeChanged(this.strategisedGetState(), next)) {\n          this.strategisedSetState(next)\n        }\n      })\n\n      render() {\n        const disablePlaceholder =\n          withSize.enableSSRBehaviour ||\n          withSize.noPlaceholders ||\n          noPlaceholder ||\n          this.strategy === 'callback'\n\n        const size = { ...this.state }\n\n        return (\n          <SizeMeRenderWrapper\n            explicitRef={this.refCallback}\n            size={this.strategy === 'callback' ? null : size}\n            disablePlaceholder={disablePlaceholder}\n            {...this.props}\n          />\n        )\n      }\n    }\n\n    SizeAwareComponent.WrappedComponent = WrappedComponent\n\n    return SizeAwareComponent\n  }\n}\n\n/**\n * Allow SizeMe to run within SSR environments.  This is a \"global\" behaviour\n * flag that should be set within the initialisation phase of your application.\n *\n * Warning: don't set this flag unless you need to as using it may cause\n * extra render cycles to happen within your components depending on the logic\n * contained within them around the usage of the `size` data.\n *\n * DEPRECATED: Please use the global noPlaceholders\n */\nwithSize.enableSSRBehaviour = false\n\n/**\n * Global configuration allowing to disable placeholder rendering for all\n * sizeMe components.\n */\nwithSize.noPlaceholders = false\n\nexport default withSize\n","import React, { Component } from 'react'\nimport isShallowEqual from 'shallowequal'\nimport PropTypes from 'prop-types'\nimport withSize from './with-size'\n\nexport default class SizeMe extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    render: PropTypes.func,\n  }\n\n  static defaultProps = {\n    children: undefined,\n    render: undefined,\n  }\n\n  constructor(props) {\n    super(props)\n    const { children, render, ...sizeMeConfig } = props\n    this.createComponent(sizeMeConfig)\n    this.state = {\n      size: {\n        width: undefined,\n        height: undefined,\n      },\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      children: prevChildren,\n      render: prevRender,\n      ...currentSizeMeConfig\n    } = this.props\n    const {\n      children: nextChildren,\n      render: nextRender,\n      ...prevSizeMeConfig\n    } = prevProps\n    if (!isShallowEqual(currentSizeMeConfig, prevSizeMeConfig)) {\n      this.createComponent(currentSizeMeConfig)\n    }\n  }\n\n  createComponent = config => {\n    this.SizeAware = withSize(config)(({ children }) => children)\n  }\n\n  onSize = size => this.setState({ size })\n\n  render() {\n    const { SizeAware } = this\n    const render = this.props.children || this.props.render\n    return (\n      <SizeAware onSize={this.onSize}>\n        {render({ size: this.state.size })}\n      </SizeAware>\n    )\n  }\n}\n","import withSize from './with-size'\nimport SizeMe from './component'\n\nwithSize.SizeMe = SizeMe\nwithSize.withSize = withSize\n\nexport default withSize\n"],"names":["instances","resizeDetector","strategy","createResizeDetector","errMsg","defaultConfig","getDisplayName","WrappedComponent","displayName","name","ReferenceWrapper","Children","only","props","children","Component","propTypes","PropTypes","element","isRequired","Placeholder","className","style","phProps","width","height","React","string","object","renderWrapper","SizeMeRenderer","explicitRef","size","disablePlaceholder","onSize","restProps","noSizeData","position","renderPlaceholder","renderProps","toRender","func","shape","number","bool","withSize","config","monitorWidth","monitorHeight","monitorPosition","refreshRate","refreshMode","noPlaceholder","resizeDetectorStrategy","refreshDelayStrategy","throttle","debounce","WrapComponent","SizeMeRenderWrapper","SizeAwareComponent","domEl","state","undefined","uninstall","detector","err","warn","determineStrategy","callbackState","strategisedSetState","setState","strategisedGetState","refCallback","hasSizeChanged","current","next","c","n","cp","np","top","left","bottom","right","checkIfSizeChanged","el","getBoundingClientRect","handleDOMNode","found","ReactDOM","findDOMNode","listenTo","isSameNode","enableSSRBehaviour","noPlaceholders","SizeMe","render","sizeMeConfig","createComponent","prevProps","prevChildren","prevRender","currentSizeMeConfig","nextChildren","nextRender","prevSizeMeConfig","isShallowEqual","SizeAware","defaultProps"],"mappings":"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"}