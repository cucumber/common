import { FunctionComponent } from 'react';
import PropTypes from 'prop-types';
import { State } from '@storybook/api';
export declare const Link: {
    ({ id, prefix, name, children, isLeaf, isComponent, onClick, onKeyUp, childIds, isExpanded, }: {
        id: any;
        prefix: any;
        name: any;
        children: any;
        isLeaf: any;
        isComponent: any;
        onClick: any;
        onKeyUp: any;
        childIds: any;
        isExpanded: any;
    }): JSX.Element;
    displayName: string;
    propTypes: {
        children: PropTypes.Validator<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
        id: PropTypes.Validator<string>;
        name: PropTypes.Validator<string>;
        isLeaf: PropTypes.Validator<boolean>;
        prefix: PropTypes.Validator<string>;
        onKeyUp: PropTypes.Validator<(...args: any[]) => any>;
        onClick: PropTypes.Validator<(...args: any[]) => any>;
        childIds: PropTypes.Requireable<(string | null)[]>;
        isExpanded: PropTypes.Requireable<boolean>;
    };
    defaultProps: {
        childIds: null;
        isExpanded: boolean;
    };
};
export interface StoriesProps {
    loading: boolean;
    stories: State['StoriesHash'];
    storyId?: undefined | string;
    className?: undefined | string;
}
declare const SidebarStories: FunctionComponent<StoriesProps>;
export default SidebarStories;
