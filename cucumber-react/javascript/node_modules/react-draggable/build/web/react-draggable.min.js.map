{"version":3,"sources":["../webpack/universalModuleDefinition","../webpack/bootstrap",".././node_modules/prop-types/index.js","../external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","../external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\",\"root\":\"ReactDOM\"}",".././node_modules/classnames/index.js",".././lib/cjs.js",".././node_modules/prop-types/factoryWithThrowingShims.js",".././node_modules/prop-types/lib/ReactPropTypesSecret.js",".././lib/utils/shims.js",".././lib/utils/getPrefix.js",".././lib/utils/domFns.js",".././lib/utils/positionFns.js",".././lib/DraggableCore.js",".././lib/Draggable.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","join","default","Draggable","DraggableCore","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","findInArray","callback","isFunction","toString","isNum","num","isNaN","int","a","parseInt","dontSetMe","prefixes","browserPrefixToKey","prop","prefix","str","out","shouldCapitalize","toUpperCase","kebabToTitleCase","getPrefix","document","style","documentElement","matchesSelectorFunc","matchesSelector","el","selector","method","matchesSelectorAndParentsTo","baseNode","parentNode","addEvent","event","handler","attachEvent","addEventListener","removeEvent","detachEvent","removeEventListener","outerHeight","height","clientHeight","computedStyle","ownerDocument","defaultView","getComputedStyle","borderTopWidth","borderBottomWidth","outerWidth","width","clientWidth","borderLeftWidth","borderRightWidth","innerHeight","paddingTop","paddingBottom","innerWidth","paddingLeft","paddingRight","getTranslation","positionOffset","unitSuffix","x","y","translation","defaultX","defaultY","addUserSelectStyles","doc","className","styleEl","getElementById","createElement","type","id","innerHTML","getElementsByTagName","appendChild","body","classList","add","match","RegExp","removeUserSelectStyles","remove","replace","selection","empty","getSelection","removeAllRanges","e","styleHacks","touchAction","canDragX","draggable","axis","canDragY","getControlPosition","touchIdentifier","draggableCore","touchObj","identifier","targetTouches","changedTouches","getTouch","findDOMNode","evt","offsetParent","scale","offsetParentRect","left","top","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","offsetXYFromParent","createCoreData","state","isStart","lastX","deltaX","deltaY","lastY","createDraggableData","coreData","ReactDOM","eventsFor","touch","start","move","stop","mouse","dragEventFor","dragging","NaN","onMouseDown","allowAnyClick","button","thisNode","disabled","target","Node","handle","cancel","getTouchIdentifier","setState","position","coreEvent","onStart","enableUserSelectHack","handleDrag","handleDragStop","preventDefault","grid","pendingX","pendingY","Math","round","onDrag","MouseEvent","createEvent","initMouseEvent","onStop","handleDragStart","React","Component","this","cloneElement","Children","only","children","onTouchStart","onMouseUp","onTouchEnd","nodeType","transform","dragged","uiData","newState","bounds","slackX","slackY","right","bottom","cloneBounds","boundNode","ownerWindow","querySelector","HTMLElement","nodeStyle","boundNodeStyle","offsetLeft","marginLeft","offsetTop","marginTop","marginRight","marginBottom","min","max","getBoundPosition","newStateX","newStateY","Boolean","defaultPosition","prevPropsPosition","isElementSVG","console","warn","SVGElement","defaultClassName","defaultClassNameDragging","defaultClassNameDragged","draggableCoreProps","svgTransform","validPosition","transformOpts","controlPos","createSVGTransform","browserPrefix","createCSSTransform","onDragStart","onDragStop","propTypes","defaultProps"],"mappings":"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","file":"react-draggable.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactDraggable\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactDraggable\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","const {default: Draggable, DraggableCore} = require('./Draggable');\n\n// Previous versions of this lib exported <Draggable> as the root export. As to no-// them, or TypeScript, we export *both* as the root and as 'default'.\n// See https://github.com/mzabriskie/react-draggable/pull/254\n// and https://github.com/mzabriskie/react-draggable/issues/266\nmodule.exports = Draggable;\nmodule.exports.default = Draggable;\nmodule.exports.DraggableCore = DraggableCore;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// @flow\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nexport function findInArray(array: Array<any> | TouchList, callback: Function): any {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\n\nexport function isFunction(func: any): boolean {\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\n\nexport function isNum(num: any): boolean {\n  return typeof num === 'number' && !isNaN(num);\n}\n\nexport function int(a: string): number {\n  return parseInt(a, 10);\n}\n\nexport function dontSetMe(props: Object, propName: string, componentName: string) {\n  if (props[propName]) {\n    return new Error(`Invalid prop ${propName} passed to ${componentName} - do not set this, set it on the child.`);\n  }\n}\n","// @flow\nconst prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nexport function getPrefix(prop: string='transform'): string {\n  // Checking specifically for 'window.document' is for pseudo-browser server-side\n  // environments that define 'window' as the global context.\n  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n  const style = window.document.documentElement.style;\n\n  if (prop in style) return '';\n\n  for (let i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n\n  return '';\n}\n\nexport function browserPrefixToKey(prop: string, prefix: string): string {\n  return prefix ? `${prefix}${kebabToTitleCase(prop)}` : prop;\n}\n\nexport function browserPrefixToStyle(prop: string, prefix: string): string {\n  return prefix ? `-${prefix.toLowerCase()}-${prop}` : prop;\n}\n\nfunction kebabToTitleCase(str: string): string {\n  let out = '';\n  let shouldCapitalize = true;\n  for (let i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n}\n\n// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\nexport default getPrefix();\n","// @flow\nimport {findInArray, isFunction, int} from './shims';\nimport browserPrefix, {browserPrefixToKey} from './getPrefix';\n\nimport type {ControlPosition, PositionOffsetControlPosition, MouseTouchEvent} from './types';\n\nlet matchesSelectorFunc = '';\nexport function matchesSelector(el: Node, selector: string): boolean {\n  if (!matchesSelectorFunc) {\n    matchesSelectorFunc = findInArray([\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector'\n    ], function(method){\n      // $FlowIgnore: Doesn't think elements are indexable\n      return isFunction(el[method]);\n    });\n  }\n\n  // Might not be found entirely (not an Element?) - in that case, bail\n  // $FlowIgnore: Doesn't think elements are indexable\n  if (!isFunction(el[matchesSelectorFunc])) return false;\n\n  // $FlowIgnore: Doesn't think elements are indexable\n  return el[matchesSelectorFunc](selector);\n}\n\n// Works up the tree to the draggable itself attempting to match selector.\nexport function matchesSelectorAndParentsTo(el: Node, selector: string, baseNode: Node): boolean {\n  let node = el;\n  do {\n    if (matchesSelector(node, selector)) return true;\n    if (node === baseNode) return false;\n    node = node.parentNode;\n  } while (node);\n\n  return false;\n}\n\nexport function addEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.attachEvent) {\n    el.attachEvent('on' + event, handler);\n  } else if (el.addEventListener) {\n    el.addEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = handler;\n  }\n}\n\nexport function removeEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.detachEvent) {\n    el.detachEvent('on' + event, handler);\n  } else if (el.removeEventListener) {\n    el.removeEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = null;\n  }\n}\n\nexport function outerHeight(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetTop which is including margin. See getBoundPosition\n  let height = node.clientHeight;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height += int(computedStyle.borderTopWidth);\n  height += int(computedStyle.borderBottomWidth);\n  return height;\n}\n\nexport function outerWidth(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetLeft which is including margin. See getBoundPosition\n  let width = node.clientWidth;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width += int(computedStyle.borderLeftWidth);\n  width += int(computedStyle.borderRightWidth);\n  return width;\n}\nexport function innerHeight(node: HTMLElement): number {\n  let height = node.clientHeight;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height -= int(computedStyle.paddingTop);\n  height -= int(computedStyle.paddingBottom);\n  return height;\n}\n\nexport function innerWidth(node: HTMLElement): number {\n  let width = node.clientWidth;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width -= int(computedStyle.paddingLeft);\n  width -= int(computedStyle.paddingRight);\n  return width;\n}\n\n// Get from offsetParent\nexport function offsetXYFromParent(evt: {clientX: number, clientY: number}, offsetParent: HTMLElement, scale: number): ControlPosition {\n  const isBody = offsetParent === offsetParent.ownerDocument.body;\n  const offsetParentRect = isBody ? {left: 0, top: 0} : offsetParent.getBoundingClientRect();\n\n  const x = (evt.clientX + offsetParent.scrollLeft - offsetParentRect.left) / scale;\n  const y = (evt.clientY + offsetParent.scrollTop - offsetParentRect.top) / scale;\n\n  return {x, y};\n}\n\nexport function createCSSTransform(controlPos: ControlPosition, positionOffset: PositionOffsetControlPosition): Object {\n  const translation = getTranslation(controlPos, positionOffset, 'px');\n  return {[browserPrefixToKey('transform', browserPrefix)]: translation };\n}\n\nexport function createSVGTransform(controlPos: ControlPosition, positionOffset: PositionOffsetControlPosition): string {\n  const translation = getTranslation(controlPos, positionOffset, '');\n  return translation;\n}\nexport function getTranslation({x, y}: ControlPosition, positionOffset: PositionOffsetControlPosition, unitSuffix: string): string {\n  let translation = `translate(${x}${unitSuffix},${y}${unitSuffix})`;\n  if (positionOffset) {\n    const defaultX = `${(typeof positionOffset.x === 'string') ? positionOffset.x : positionOffset.x + unitSuffix}`;\n    const defaultY = `${(typeof positionOffset.y === 'string') ? positionOffset.y : positionOffset.y + unitSuffix}`;\n    translation = `translate(${defaultX}, ${defaultY})` + translation;\n  }\n  return translation;\n}\n\nexport function getTouch(e: MouseTouchEvent, identifier: number): ?{clientX: number, clientY: number} {\n  return (e.targetTouches && findInArray(e.targetTouches, t => identifier === t.identifier)) ||\n         (e.changedTouches && findInArray(e.changedTouches, t => identifier === t.identifier));\n}\n\nexport function getTouchIdentifier(e: MouseTouchEvent): ?number {\n  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n}\n\n// User-select Hacks:\n//\n// Useful for preventing blue highlights all over everything when dragging.\n\n// Note we're passing `document` b/c we could be iframed\nexport function addUserSelectStyles(doc: ?Document) {\n  if (!doc) return;\n  let styleEl = doc.getElementById('react-draggable-style-el');\n  if (!styleEl) {\n    styleEl = doc.createElement('style');\n    styleEl.type = 'text/css';\n    styleEl.id = 'react-draggable-style-el';\n    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\n    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {all: inherit;}\\n';\n    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n  }\n  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n}\n\nexport function removeUserSelectStyles(doc: ?Document) {\n  try {\n    if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n    // $FlowIgnore: IE\n    if (doc.selection) {\n      // $FlowIgnore: IE\n      doc.selection.empty();\n    } else {\n      window.getSelection().removeAllRanges();  // remove selection caused by scroll\n    }\n  } catch (e) {\n    // probably IE\n  }\n}\n\nexport function styleHacks(childStyle: Object = {}): Object {\n  // Workaround IE pointer events; see #51\n  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n  return {\n    touchAction: 'none',\n    ...childStyle\n  };\n}\n\nexport function addClassName(el: HTMLElement, className: string) {\n  if (el.classList) {\n    el.classList.add(className);\n  } else {\n    if (!el.className.match(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`))) {\n      el.className += ` ${className}`;\n    }\n  }\n}\n\nexport function removeClassName(el: HTMLElement, className: string) {\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`, 'g'), '');\n  }\n}\n","// @flow\nimport {isNum, int} from './shims';\nimport ReactDOM from 'react-dom';\nimport {getTouch, innerWidth, innerHeight, offsetXYFromParent, outerWidth, outerHeight} from './domFns';\n\nimport type Draggable from '../Draggable';\nimport type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';\nimport type DraggableCore from '../DraggableCore';\n\nexport function getBoundPosition(draggable: Draggable, x: number, y: number): [number, number] {\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [x, y];\n\n  // Clone new bounds\n  let {bounds} = draggable.props;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  const node = findDOMNode(draggable);\n\n  if (typeof bounds === 'string') {\n    const {ownerDocument} = node;\n    const ownerWindow = ownerDocument.defaultView;\n    let boundNode;\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n    const nodeStyle = ownerWindow.getComputedStyle(node);\n    const boundNodeStyle = ownerWindow.getComputedStyle(boundNode);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) + int(nodeStyle.marginLeft),\n      top: -node.offsetTop + int(boundNodeStyle.paddingTop) + int(nodeStyle.marginTop),\n      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft +\n        int(boundNodeStyle.paddingRight) - int(nodeStyle.marginRight),\n      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop +\n        int(boundNodeStyle.paddingBottom) - int(nodeStyle.marginBottom)\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n  if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n  // But above left and top limits.\n  if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n  if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n\n  return [x, y];\n}\n\nexport function snapToGrid(grid: [number, number], pendingX: number, pendingY: number): [number, number] {\n  const x = Math.round(pendingX / grid[0]) * grid[0];\n  const y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\nexport function canDragX(draggable: Draggable): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nexport function canDragY(draggable: Draggable): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\n// Get {x, y} positions from event.\nexport function getControlPosition(e: MouseTouchEvent, touchIdentifier: ?number, draggableCore: DraggableCore): ?ControlPosition {\n  const touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n  const node = findDOMNode(draggableCore);\n  // User can provide an offsetParent if desired.\n  const offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return offsetXYFromParent(touchObj || e, offsetParent, draggableCore.props.scale);\n}\n\n// Create an data object exposed by <DraggableCore>'s events\nexport function createCoreData(draggable: DraggableCore, x: number, y: number): DraggableData {\n  const state = draggable.state;\n  const isStart = !isNum(state.lastX);\n  const node = findDOMNode(draggable);\n\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node,\n      deltaX: 0, deltaY: 0,\n      lastX: x, lastY: y,\n      x, y,\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node,\n      deltaX: x - state.lastX, deltaY: y - state.lastY,\n      lastX: state.lastX, lastY: state.lastY,\n      x, y,\n    };\n  }\n}\n\n// Create an data exposed by <Draggable>'s events\nexport function createDraggableData(draggable: Draggable, coreData: DraggableData): DraggableData {\n  const scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + (coreData.deltaX / scale),\n    y: draggable.state.y + (coreData.deltaY / scale),\n    deltaX: (coreData.deltaX / scale),\n    deltaY: (coreData.deltaY / scale),\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n}\n\n// A lot faster than stringify/parse\nfunction cloneBounds(bounds: Bounds): Bounds {\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\n\nfunction findDOMNode(draggable: Draggable | DraggableCore): HTMLElement {\n  const node = ReactDOM.findDOMNode(draggable);\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  }\n  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n  return node;\n}\n","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport {matchesSelectorAndParentsTo, addEvent, removeEvent, addUserSelectStyles, getTouchIdentifier,\n        removeUserSelectStyles, styleHacks} from './utils/domFns';\nimport {createCoreData, getControlPosition, snapToGrid} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport log from './utils/log';\n\nimport type {EventHandler, MouseTouchEvent} from './utils/types';\nimport type {Element as ReactElement} from 'react';\n\n// Simple abstraction for dragging events names.\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n};\n\n// Default to mouse events.\nlet dragEventFor = eventsFor.mouse;\n\ntype DraggableCoreState = {\n  dragging: boolean,\n  lastX: number,\n  lastY: number,\n  touchIdentifier: ?number\n};\n\nexport type DraggableBounds = {\n  left: number,\n  right: number,\n  top: number,\n  bottom: number,\n};\n\nexport type DraggableData = {\n  node: HTMLElement,\n  x: number, y: number,\n  deltaX: number, deltaY: number,\n  lastX: number, lastY: number,\n};\n\nexport type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;\n\nexport type ControlPosition = {x: number, y: number};\nexport type PositionOffsetControlPosition = {x: number|string, y: number|string};\n\nexport type DraggableCoreProps = {\n  allowAnyClick: boolean,\n  cancel: string,\n  children: ReactElement<any>,\n  disabled: boolean,\n  enableUserSelectHack: boolean,\n  offsetParent: HTMLElement,\n  grid: [number, number],\n  handle: string,\n  onStart: DraggableEventHandler,\n  onDrag: DraggableEventHandler,\n  onStop: DraggableEventHandler,\n  onMouseDown: (e: MouseEvent) => void,\n  scale: number,\n};\n\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\n\nexport default class DraggableCore extends React.Component<DraggableCoreProps, DraggableCoreState> {\n\n  static displayName = 'DraggableCore';\n\n  static propTypes = {\n    /**\n     * `allowAnyClick` allows dragging using any mouse button.\n     * By default, we only accept the left button.\n     *\n     * Defaults to `false`.\n     */\n    allowAnyClick: PropTypes.bool,\n\n    /**\n     * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n     * with the exception of `onMouseDown`, will not fire.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * By default, we add 'user-select:none' attributes to the document body\n     * to prevent ugly text selection during drag. If this is causing problems\n     * for your app, set this to `false`.\n     */\n    enableUserSelectHack: PropTypes.bool,\n\n    /**\n     * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n     * instead of using the parent node.\n     */\n    offsetParent: function(props: DraggableCoreProps, propName: $Keys<DraggableCoreProps>) {\n      if (props[propName] && props[propName].nodeType !== 1) {\n        throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n      }\n    },\n\n    /**\n     * `grid` specifies the x and y that dragging should snap to.\n     */\n    grid: PropTypes.arrayOf(PropTypes.number),\n    \n    /**\n     * `handle` specifies a selector to be used as the handle that initiates drag.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable handle=\".handle\">\n     *              <div>\n     *                  <div className=\"handle\">Click me to drag</div>\n     *                  <div>This is some other content</div>\n     *              </div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    handle: PropTypes.string,\n\n    /**\n     * `cancel` specifies a selector to be used to prevent drag initialization.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return(\n     *               <Draggable cancel=\".cancel\">\n     *                   <div>\n     *                     <div className=\"cancel\">You can't drag from here</div>\n     *                     <div>Dragging here works fine</div>\n     *                   </div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    cancel: PropTypes.string,\n\n    /**\n     * Called when dragging starts.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onStart: PropTypes.func,\n\n    /**\n     * Called while dragging.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onDrag: PropTypes.func,\n\n    /**\n     * Called when dragging stops.\n     * If this function returns the boolean false, the drag will remain active.\n     */\n    onStop: PropTypes.func,\n\n    /**\n     * A workaround option which can be passed if onMouseDown needs to be accessed,\n     * since it'll always be blocked (as there is internal use of onMouseDown)\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * `scale`, if set, applies scaling while dragging an element\n     */\n    scale: PropTypes.number,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    allowAnyClick: false, // by default only accept left click\n    cancel: null,\n    disabled: false,\n    enableUserSelectHack: true,\n    offsetParent: null,\n    handle: null,\n    grid: null,\n    transform: null,\n    onStart: function(){},\n    onDrag: function(){},\n    onStop: function(){},\n    onMouseDown: function(){},\n    scale: 1,\n  };\n\n  state = {\n    dragging: false,\n    // Used while dragging to determine deltas.\n    lastX: NaN, lastY: NaN,\n    touchIdentifier: null\n  };\n\n  componentWillUnmount() {\n    // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n    // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const {ownerDocument} = thisNode;\n      removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n      removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n      removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n      removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n      if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n    }\n  }\n\n  handleDragStart: EventHandler<MouseTouchEvent> = (e) => {\n    // Make it possible to attach event handlers on top of this one.\n    this.props.onMouseDown(e);\n\n    // Only accept left-clicks.\n    if (!this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n    // Get nodes. Be sure to grab relative document (could be iframed)\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n      throw new Error('<DraggableCore> not mounted on DragStart!');\n    }\n    const {ownerDocument} = thisNode;\n\n    // Short circuit if handle or cancel prop was provided and selector doesn't match.\n    if (this.props.disabled ||\n      (!(e.target instanceof ownerDocument.defaultView.Node)) ||\n      (this.props.handle && !matchesSelectorAndParentsTo(e.target, this.props.handle, thisNode)) ||\n      (this.props.cancel && matchesSelectorAndParentsTo(e.target, this.props.cancel, thisNode))) {\n      return;\n    }\n\n    // Set touch identifier in component state if this is a touch event. This allows us to\n    // distinguish between individual touches on multitouch screens by identifying which\n    // touchpoint was set to this element.\n    const touchIdentifier = getTouchIdentifier(e);\n    this.setState({touchIdentifier});\n\n    // Get the current drag point from the event. This is used as the offset.\n    const position = getControlPosition(e, touchIdentifier, this);\n    if (position == null) return; // not possible but satisfies flow\n    const {x, y} = position;\n\n    // Create an event object with all the data parents need to make a decision here.\n    const coreEvent = createCoreData(this, x, y);\n\n    log('DraggableCore: handleDragStart: %j', coreEvent);\n\n    // Call event handler. If it returns explicit false, cancel.\n    log('calling', this.props.onStart);\n    const shouldUpdate = this.props.onStart(e, coreEvent);\n    if (shouldUpdate === false) return;\n\n    // Add a style to the body to disable user-select. This prevents text from\n    // being selected all over the page.\n    if (this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument);\n\n    // Initiate dragging. Set the current x and y as offsets\n    // so we know how much we've moved during the drag. This allows us\n    // to drag elements around even if they have been moved, without issue.\n    this.setState({\n      dragging: true,\n\n      lastX: x,\n      lastY: y\n    });\n\n    // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n    // this element. We use different events depending on whether or not we have detected that this\n    // is a touch-capable device.\n    addEvent(ownerDocument, dragEventFor.move, this.handleDrag);\n    addEvent(ownerDocument, dragEventFor.stop, this.handleDragStop);\n  };\n\n  handleDrag: EventHandler<MouseTouchEvent> = (e) => {\n\n    // Prevent scrolling on mobile devices, like ipad/iphone.\n    if (e.type === 'touchmove') e.preventDefault();\n\n    // Get the current drag point from the event. This is used as the offset.\n    const position = getControlPosition(e, this.state.touchIdentifier, this);\n    if (position == null) return;\n    let {x, y} = position;\n\n    // Snap to grid if prop has been provided\n    if (Array.isArray(this.props.grid)) {\n      let deltaX = x - this.state.lastX, deltaY = y - this.state.lastY;\n      [deltaX, deltaY] = snapToGrid(this.props.grid, deltaX, deltaY);\n      if (!deltaX && !deltaY) return; // skip useless drag\n      x = this.state.lastX + deltaX, y = this.state.lastY + deltaY;\n    }\n\n    const coreEvent = createCoreData(this, x, y);\n\n    log('DraggableCore: handleDrag: %j', coreEvent);\n\n    // Call event handler. If it returns explicit false, trigger end.\n    const shouldUpdate = this.props.onDrag(e, coreEvent);\n    if (shouldUpdate === false) {\n      try {\n        // $FlowIgnore\n        this.handleDragStop(new MouseEvent('mouseup'));\n      } catch (err) {\n        // Old browsers\n        const event = ((document.createEvent('MouseEvents'): any): MouseTouchEvent);\n        // I see why this insanity was deprecated\n        // $FlowIgnore\n        event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        this.handleDragStop(event);\n      }\n      return;\n    }\n\n    this.setState({\n      lastX: x,\n      lastY: y\n    });\n  };\n\n  handleDragStop: EventHandler<MouseTouchEvent> = (e) => {\n    if (!this.state.dragging) return;\n\n    const position = getControlPosition(e, this.state.touchIdentifier, this);\n    if (position == null) return;\n    const {x, y} = position;\n    const coreEvent = createCoreData(this, x, y);\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      // Remove user-select hack\n      if (this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n    }\n\n    log('DraggableCore: handleDragStop: %j', coreEvent);\n\n    // Reset the el.\n    this.setState({\n      dragging: false,\n      lastX: NaN,\n      lastY: NaN\n    });\n\n    // Call event handler\n    this.props.onStop(e, coreEvent);\n\n    if (thisNode) {\n      // Remove event handlers\n      log('DraggableCore: Removing handlers');\n      removeEvent(thisNode.ownerDocument, dragEventFor.move, this.handleDrag);\n      removeEvent(thisNode.ownerDocument, dragEventFor.stop, this.handleDragStop);\n    }\n  };\n\n  onMouseDown: EventHandler<MouseTouchEvent> = (e) => {\n    dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n    return this.handleDragStart(e);\n  };\n\n  onMouseUp: EventHandler<MouseTouchEvent> = (e) => {\n    dragEventFor = eventsFor.mouse;\n\n    return this.handleDragStop(e);\n  };\n\n  // Same as onMouseDown (start drag), but now consider this a touch device.\n  onTouchStart: EventHandler<MouseTouchEvent> = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStart(e);\n  };\n\n  onTouchEnd: EventHandler<MouseTouchEvent> = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStop(e);\n  };\n\n  render() {\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return React.cloneElement(React.Children.only(this.props.children), {\n      style: styleHacks(this.props.children.props.style),\n\n      // Note: mouseMove handler is attached to document so it will still function\n      // when the user drags quickly and leaves the bounds of the element.\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.onTouchStart,\n      onMouseUp: this.onMouseUp,\n      onTouchEnd: this.onTouchEnd\n    });\n  }\n}\n","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport {createCSSTransform, createSVGTransform} from './utils/domFns';\nimport {canDragX, canDragY, createDraggableData, getBoundPosition} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport DraggableCore from './DraggableCore';\nimport type {ControlPosition, PositionOffsetControlPosition, DraggableBounds, DraggableCoreProps} from './DraggableCore';\nimport log from './utils/log';\nimport type {DraggableEventHandler} from './utils/types';\nimport type {Element as ReactElement} from 'react';\n\ntype DraggableState = {\n  dragging: boolean,\n  dragged: boolean,\n  x: number, y: number,\n  slackX: number, slackY: number,\n  isElementSVG: boolean,\n  prevPropsPosition: ?ControlPosition,\n};\n\nexport type DraggableProps = {\n  ...$Exact<DraggableCoreProps>,\n  axis: 'both' | 'x' | 'y' | 'none',\n  bounds: DraggableBounds | string | false,\n  defaultClassName: string,\n  defaultClassNameDragging: string,\n  defaultClassNameDragged: string,\n  defaultPosition: ControlPosition,\n  positionOffset: PositionOffsetControlPosition,\n  position: ControlPosition,\n  scale: number\n};\n\n//\n// Define <Draggable>\n//\n\nclass Draggable extends React.Component<DraggableProps, DraggableState> {\n\n  static displayName = 'Draggable';\n\n  static propTypes = {\n    // Accepts all props <DraggableCore> accepts.\n    ...DraggableCore.propTypes,\n\n    /**\n     * `axis` determines which axis the draggable can move.\n     *\n     *  Note that all callbacks will still return data as normal. This only\n     *  controls flushing to the DOM.\n     *\n     * 'both' allows movement horizontally and vertically.\n     * 'x' limits movement to horizontal axis.\n     * 'y' limits movement to vertical axis.\n     * 'none' limits all movement.\n     *\n     * Defaults to 'both'.\n     */\n    axis: PropTypes.oneOf(['both', 'x', 'y', 'none']),\n\n    /**\n     * `bounds` determines the range of movement available to the element.\n     * Available values are:\n     *\n     * 'parent' restricts movement within the Draggable's parent node.\n     *\n     * Alternatively, pass an object with the following properties, all of which are optional:\n     *\n     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n     *\n     * All values are in px.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable bounds={{right: 300, bottom: 300}}>\n     *              <div>Content</div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    bounds: PropTypes.oneOfType([\n      PropTypes.shape({\n        left: PropTypes.number,\n        right: PropTypes.number,\n        top: PropTypes.number,\n        bottom: PropTypes.number\n      }),\n      PropTypes.string,\n      PropTypes.oneOf([false])\n    ]),\n\n    defaultClassName: PropTypes.string,\n    defaultClassNameDragging: PropTypes.string,\n    defaultClassNameDragged: PropTypes.string,\n\n    /**\n     * `defaultPosition` specifies the x and y that the dragged item should start at\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    defaultPosition: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n    positionOffset: PropTypes.shape({\n      x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      y: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }),\n\n    /**\n     * `position`, if present, defines the current position of the element.\n     *\n     *  This is similar to how form elements in React work - if no `position` is supplied, the component\n     *  is uncontrolled.\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable position={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    position: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    ...DraggableCore.defaultProps,\n    axis: 'both',\n    bounds: false,\n    defaultClassName: 'react-draggable',\n    defaultClassNameDragging: 'react-draggable-dragging',\n    defaultClassNameDragged: 'react-draggable-dragged',\n    defaultPosition: {x: 0, y: 0},\n    position: null,\n    scale: 1\n  };\n\n  // React 16.3+\n  // Arity (props, state)\n  static getDerivedStateFromProps({position}: DraggableProps, {prevPropsPosition}: DraggableState) {\n    // Set x/y if a new position is provided in props that is different than the previous.\n    if (\n      position &&\n      (!prevPropsPosition || \n        position.x !== prevPropsPosition.x || position.y !== prevPropsPosition.y\n      )\n    ) {\n      log('Draggable: getDerivedStateFromProps %j', {position, prevPropsPosition});\n      return {\n        x: position.x, \n        y: position.y, \n        prevPropsPosition: {...position}\n      };\n    }\n    return null;\n  }\n\n  constructor(props: DraggableProps) {\n    super(props);\n\n    this.state = {\n      // Whether or not we are currently dragging.\n      dragging: false,\n\n      // Whether or not we have been dragged before.\n      dragged: false,\n\n      // Current transform x and y.\n      x: props.position ? props.position.x : props.defaultPosition.x,\n      y: props.position ? props.position.y : props.defaultPosition.y,\n\n      prevPropsPosition: {...props.position},\n\n      // Used for compensating for out-of-bounds drags\n      slackX: 0, slackY: 0,\n\n      // Can only determine if SVG after mounting\n      isElementSVG: false\n    };\n\n    if (props.position && !(props.onDrag || props.onStop)) {\n      // eslint-disable-next-line no-console\n      console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' +\n        'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' +\n        '`position` of this element.');\n    }\n  }\n\n  componentDidMount() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if(typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n      this.setState({isElementSVG: true});\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({dragging: false}); // prevents invariant if unmounted while dragging\n  }\n\n  onDragStart: DraggableEventHandler = (e, coreData) => {\n    log('Draggable: onDragStart: %j', coreData);\n\n    // Short-circuit if user's callback killed it.\n    const shouldStart = this.props.onStart(e, createDraggableData(this, coreData));\n    // Kills start event on core as well, so move handlers are never bound.\n    if (shouldStart === false) return false;\n\n    this.setState({dragging: true, dragged: true});\n  };\n\n  onDrag: DraggableEventHandler = (e, coreData) => {\n    if (!this.state.dragging) return false;\n    log('Draggable: onDrag: %j', coreData);\n\n    const uiData = createDraggableData(this, coreData);\n\n    const newState: $Shape<DraggableState> = {\n      x: uiData.x,\n      y: uiData.y\n    };\n\n    // Keep within bounds.\n    if (this.props.bounds) {\n      // Save original x and y.\n      const {x, y} = newState;\n\n      // Add slack to the values used to calculate bound position. This will ensure that if\n      // we start removing slack, the element won't react to it right away until it's been\n      // completely removed.\n      newState.x += this.state.slackX;\n      newState.y += this.state.slackY;\n\n      // Get bound position. This will ceil/floor the x and y within the boundaries.\n      const [newStateX, newStateY] = getBoundPosition(this, newState.x, newState.y);\n      newState.x = newStateX;\n      newState.y = newStateY;\n\n      // Recalculate slack by noting how much was shaved by the boundPosition handler.\n      newState.slackX = this.state.slackX + (x - newState.x);\n      newState.slackY = this.state.slackY + (y - newState.y);\n\n      // Update the event we fire to reflect what really happened after bounds took effect.\n      uiData.x = newState.x;\n      uiData.y = newState.y;\n      uiData.deltaX = newState.x - this.state.x;\n      uiData.deltaY = newState.y - this.state.y;\n    }\n\n    // Short-circuit if user's callback killed it.\n    const shouldUpdate = this.props.onDrag(e, uiData);\n    if (shouldUpdate === false) return false;\n\n    this.setState(newState);\n  };\n\n  onDragStop: DraggableEventHandler = (e, coreData) => {\n    if (!this.state.dragging) return false;\n\n    // Short-circuit if user's callback killed it.\n    const shouldStop = this.props.onStop(e, createDraggableData(this, coreData));\n    if (shouldStop === false) return false;\n\n    log('Draggable: onDragStop: %j', coreData);\n\n    const newState: $Shape<DraggableState> = {\n      dragging: false,\n      slackX: 0,\n      slackY: 0\n    };\n\n    // If this is a controlled component, the result of this operation will be to\n    // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n    const controlled = Boolean(this.props.position);\n    if (controlled) {\n      const {x, y} = this.props.position;\n      newState.x = x;\n      newState.y = y;\n    }\n\n    this.setState(newState);\n  };\n\n  render(): ReactElement<any> {\n    const {\n      axis,\n      bounds,\n      children,\n      defaultPosition,\n      defaultClassName,\n      defaultClassNameDragging,\n      defaultClassNameDragged,\n      position,\n      positionOffset,\n      scale,\n      ...draggableCoreProps\n    } = this.props;\n\n    let style = {};\n    let svgTransform = null;\n\n    // If this is controlled, we don't want to move it - unless it's dragging.\n    const controlled = Boolean(position);\n    const draggable = !controlled || this.state.dragging;\n\n    const validPosition = position || defaultPosition;\n    const transformOpts = {\n      // Set left if horizontal drag is enabled\n      x: canDragX(this) && draggable ?\n        this.state.x :\n        validPosition.x,\n\n      // Set top if vertical drag is enabled\n      y: canDragY(this) && draggable ?\n        this.state.y :\n        validPosition.y\n    };\n\n    // If this element was SVG, we use the `transform` attribute.\n    if (this.state.isElementSVG) {\n      svgTransform = createSVGTransform(transformOpts, positionOffset);\n    } else {\n      // Add a CSS transform to move the element around. This allows us to move the element around\n      // without worrying about whether or not it is relatively or absolutely positioned.\n      // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n      // has a clean slate.\n      style = createCSSTransform(transformOpts, positionOffset);\n    }\n\n    // Mark with class while dragging\n    const className = classNames((children.props.className || ''), defaultClassName, {\n      [defaultClassNameDragging]: this.state.dragging,\n      [defaultClassNameDragged]: this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return (\n      <DraggableCore {...draggableCoreProps} onStart={this.onDragStart} onDrag={this.onDrag} onStop={this.onDragStop}>\n        {React.cloneElement(React.Children.only(children), {\n          className: className,\n          style: {...children.props.style, ...style},\n          transform: svgTransform\n        })}\n      </DraggableCore>\n    );\n  }\n}\n\nexport {Draggable as default, DraggableCore};\n"],"sourceRoot":""}